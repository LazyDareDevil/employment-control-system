{"version":3,"sources":["C:/repos/employment-control-system/WEB/SignIn/styles.js","C:/repos/employment-control-system/WEB/SignIn/Form.js","C:/repos/employment-control-system/WEB/SignIn/AuthWindow.js","C:/repos/employment-control-system/WEB/MainApp/FooterMenu.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/ParameterButton.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/ParametersStyles.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/BottomButton.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/WorkspaceParameters.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/Map.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapWindowStyles.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapBottomButtons.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapWindow.js","C:/repos/employment-control-system/WEB/MainApp/Settings.js","C:/repos/employment-control-system/WEB/MainApp/Header/HeaderStyles.js","C:/repos/employment-control-system/WEB/MainApp/Header/MainHeader.js","C:/repos/employment-control-system/WEB/MainApp/Timer/TimerStyles.js","C:/repos/employment-control-system/WEB/MainApp/MainApp.js","C:/repos/employment-control-system/WEB/MainApp/Timer/SeatTimer.js","C:/repos/employment-control-system/WEB/App.js","C:/repos/employment-control-system/WEB/register-service-worker.js","C:/repos/employment-control-system/WEB/assets/fonts/Roboto-Light.ttf","C:/repos/employment-control-system/WEB/assets/fonts/Roboto-Medium.ttf"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","alignContent","signWindow","width","height","flexDirection","alignSelf","appName","color","fontSize","borderWidth","borderStyle","borderColor","borderRadius","padding","fontFamily","authText","marginVertical","form","field","paddingLeft","minHeight","shadowRadius","signInBtn","marginTop","Form","loginInput","passwordInput","View","style","TextInput","placeholder","textContentType","onChangeText","val","secureTextEntry","AuthWindow","props","handleButtonClick","setState","correctData","setLogin","login","setPassword","password","state","checkData","this","KeyboardAvoidingView","behavior","enabled","onPress","Component","FooterMenu","setColor","buttonName","currentState","textStyle","changeWindow","firstButtonText","isWorkspaceChosen","vertical","name","ParameterButton","setOpacity","index","chosenParams","setIcon","buttonPressed","changeChosenParams","toString","TouchableHighlight","underlayColor","button","opacity","alignItems","aspectRatio","edgeBlock","edgeBlockText","centerBlock","flexWrap","BottomButtom","leaveButtonPressed","setParamsSelected","WorkspaceParameters","chosenParameters","full","disabled","Map","chosenSeat","workspaceNumber","num","setSeat","areParamsSelected","avialableSeats","indexOf","setLocalSeat","alert","setStatusCircle","coordsX","coordsY","i","length","React","createElement","Line","key","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","path","generator","viewBox","fill","id","onPressIn","x","y","rx","fontWeight","r","d","topBlock","bottomBlock","takeButton","anotherPlaceButton","buttonText","MapBottomButtons","seatNumber","takePlacePressed","changeWorkspace","MapWindow","transparent","icon","Workspace","confirmExit","Alert","text","checkExit","cancelable","mainView","exitButton","marginBottom","headerStyles","header","left","marginLeft","right","marginRight","elem","MainHeader","setWorkspaceText","setTimer","timerOn","timerTime","substr","timerStyles","block","borderBottomColor","borderBottomWidth","paddingBottom","stopWatch","leaveButton","yourTimeButton","MainApp","formatTime","e","window","switchFlag","startTimer","timerStart","Date","now","timer","setInterval","clearInterval","ms","seconds","Math","floor","slice","minutes","flag","array","setMainWindow","title","App","renderView","fontLoaded","someLogin","somePassword","Font","require","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.b4ee115c.chunk.js","sourcesContent":["import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 3,\r\n        backgroundColor: 'rgba(10, 61, 179, 1.0)',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n    },\r\n    \r\n    signWindow: {\r\n        width: '80%',\r\n        height: 'auto',\r\n        flexDirection: 'column',\r\n        alignSelf: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n      \r\n    appName: {\r\n        alignSelf: 'center',\r\n        color: 'white',\r\n        fontSize: 35,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        borderRadius: 5,\r\n        padding: 20,\r\n        fontFamily: 'roboto-light'\r\n    },\r\n    \r\n    authText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        alignSelf: 'center',\r\n        marginVertical: 20,\r\n        fontFamily: 'roboto-light'\r\n    },\r\n    \r\n    form: {\r\n        height: '30%',\r\n        color: 'rgba(0,0,0,0.3)',\r\n        flexDirection: 'column',\r\n        justifyContent: \"space-between\",\r\n    },\r\n  \r\n    field: {\r\n        paddingLeft: 20,\r\n        minHeight: 50,\r\n        height: '40%',\r\n        backgroundColor: 'white',\r\n        borderRadius: 5,\r\n        shadowRadius: 3,\r\n        fontFamily: 'roboto-light',\r\n        fontSize: 15,\r\n        borderWidth: 3,\r\n        borderColor: 'rgba(10, 61, 179, 1.0)',\r\n    },\r\n    \r\n    signInBtn: {\r\n        marginTop: 15,\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(229, 38, 37, 1)',\r\n        justifyContent: 'center',\r\n        minHeight: 50,\r\n        height: '12%',\r\n        width: '35%',\r\n        borderRadius: 100\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { View, TextInput } from 'react-native';\r\nimport styles from './styles'\r\n\r\nconst Form = ({loginInput, passwordInput}) => (\r\n    <View style={styles.form}>\r\n        <TextInput style={styles.field}\r\n            placeholder={'login'} \r\n            textContentType={\"username\"}\r\n            onChangeText={val => loginInput(val)}\r\n        />\r\n        <TextInput style={styles.field}\r\n            placeholder={'password'}\r\n            textContentType={'password'}\r\n            onChangeText={val => passwordInput(val)}\r\n            secureTextEntry={true}\r\n        />\r\n    </View>\r\n)\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport { View, KeyboardAvoidingView } from 'react-native';\r\nimport { Text, Button } from 'native-base'\r\nimport styles from './styles'\r\nimport Form from './Form'\r\n\r\nexport default class AuthWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\",\r\n            correctData: false\r\n        };\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        // с проверкой\r\n        // if (this.state.login && this.state.password) {\r\n        //     this.setState({ correctData: true })\r\n        //     return true\r\n        // } else {\r\n        //     alert('wrong login or password')\r\n        //     return false\r\n        // }\r\n\r\n        // без проверки на пустоту \r\n        this.setState({ correctData: true })\r\n        return true\r\n    }\r\n\r\n    setLogin = val => {\r\n        this.setState({ login: val })\r\n    }\r\n\r\n    setPassword = val => {\r\n        this.setState({ password: val })\r\n    }\r\n\r\n    render() {\r\n        var checkData = this.props.checkData\r\n        return (\r\n            <KeyboardAvoidingView style={styles.container} behavior=\"padding\" enabled>\r\n                <View style={styles.signWindow}>\r\n                    <Text style={styles.appName}>App name</Text>\r\n                    <Text style={styles.authText}>Authorization</Text>\r\n                    <Form \r\n                        loginInput={this.setLogin}\r\n                        passwordInput={this.setPassword}\r\n                    />\r\n                    <Button style={styles.signInBtn}\r\n                            onPress={() =>  checkData(this.handleButtonClick(), this.state.login, this.state.password) }\r\n                    >\r\n                        <Text style={{color: 'white', fontFamily: 'roboto-light'}}>Sign in</Text>\r\n                    </Button>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport { Footer, FooterTab, Button, Icon, Text} from 'native-base'\r\n\r\nexport default class FooterMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setColor = (buttonName) => {\r\n        var state = this.props.currentState\r\n        if (state === buttonName)\r\n            return ({color: 'rgba(39, 171, 227, 1)'})\r\n        else return ({color: 'rgba(10, 61, 179, 1.0)'})\r\n    }\r\n\r\n    textStyle = (buttonName) => {\r\n        return ([ {fontSize: 12, fontFamily: 'roboto-light'}, this.setColor(buttonName) ])\r\n    }\r\n\r\n    render() {\r\n        var changeWindow = this.props.changeWindow\r\n        let firstButtonText = this.props.isWorkspaceChosen ? 'Time' : 'Parameters'\r\n        return(\r\n            <Footer>\r\n                <FooterTab style={{backgroundColor: 'white'}}>\r\n\r\n                    <Button vertical onPress={() => changeWindow('workspace')}>\r\n                        <Icon name='tv' style={this.setColor('workspace')} />\r\n                        <Text style={this.textStyle('workspace')} >\r\n                            {firstButtonText}\r\n                        </Text>\r\n                    </Button>\r\n\r\n                    <Button vertical onPress={() => changeWindow('map')}>\r\n                        <Icon name='pin' style={this.setColor('map')} />\r\n                        <Text style={this.textStyle('map')} >\r\n                            Map\r\n                        </Text>\r\n                    </Button>\r\n\r\n                    <Button vertical onPress={() => changeWindow('settings')}>\r\n                        <Icon name='settings' style={this.setColor('settings')} />\r\n                        <Text style={this.textStyle('settings')} >\r\n                            Settings\r\n                        </Text>\r\n                    </Button>\r\n\r\n                </FooterTab>\r\n            </Footer>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport {View, TouchableHighlight, StyleSheet} from 'react-native'\r\nimport {Icon, Text} from 'native-base'\r\n\r\nexport default class ParameterButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setOpacity = index => {\r\n        return this.props.chosenParams[index] ? 1 : 0.5\r\n    }\r\n\r\n    setIcon = index => {\r\n        return this.props.chosenParams[index] ? 'remove-circle-outline' : 'add-circle'\r\n    }\r\n\r\n    buttonPressed = index => {\r\n        if (!this.props.isWorkspaceChosen) {\r\n            this.props.changeChosenParams(index)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        name = this.props.name.toString()\r\n        const {index} = this.props\r\n        return(\r\n            <TouchableHighlight onPress={() => this.buttonPressed(index)} \r\n                                underlayColor='transparent'>\r\n                <View style={[styles.button, {opacity: this.setOpacity(index)}]}>\r\n                    <Icon style={{color: 'white', fontSize: 50}} name={this.setIcon(index)} />\r\n                    <Text style={{color: 'white', fontSize: 12, fontFamily: 'roboto-light'}}>\r\n                        {name}\r\n                    </Text>\r\n                </View>\r\n            </TouchableHighlight>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgba(10, 61, 179, 1.0)',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 8,\r\n        height: '32%',\r\n        aspectRatio: 1/1,\r\n        \r\n    }\r\n})","import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    edgeBlock: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    edgeBlockText: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    centerBlock: {\r\n        // backgroundColor: 'green',\r\n        flex: 5,\r\n        width: '80%',\r\n        alignSelf: 'center',\r\n        alignItems: 'baseline',\r\n        flexDirection: 'row',\r\n        alignContent: 'space-around',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap'\r\n    }\r\n\r\n})\r\n\r\nexport default styles","import React, {Component} from 'react'\r\n// import {View} from 'react-native'\r\nimport {Button, Text} from 'native-base'\r\nimport styles from './ParametersStyles'\r\n\r\nexport default class BottomButtom extends Component {\r\n    render() {\r\n        var {isWorkspaceChosen} = this.props\r\n        if (!isWorkspaceChosen) {\r\n            return(\r\n                <Button style={{backgroundColor: 'rgba(229, 38, 37, 1)', height: '75%', borderRadius: 8}}\r\n                        onPress={() => this.props.setParamsSelected(true)}>\r\n                    <Text style={styles.edgeBlockText}>Select workspace</Text>\r\n                </Button>\r\n            )\r\n        } else {\r\n            return(\r\n                <Button style={{backgroundColor: 'rgba(229, 38, 37, 1)', height: '75%'}}\r\n                        onPress={() => this.props.leaveButtonPressed()}>\r\n                    <Text style={styles.edgeBlockText}>Leave workspace</Text>\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {View, StyleSheet} from 'react-native'\r\nimport {Button, Text, Container} from 'native-base'\r\nimport ParameterButton from './ParameterButton'\r\nimport styles from './ParametersStyles'\r\nimport BottomButton from './BottomButton'\r\n\r\nexport default class WorkspaceParameters extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        var { chosenParameters } = this.props\r\n        var { changeChosenParams } = this.props\r\n        var { isWorkspaceChosen } = this.props\r\n        return(\r\n            <Container style={{flex: 7, backgroundColor: 'rgba(211, 211, 211, 0.4)'}}>\r\n                <View style={styles.edgeBlock}>\r\n                    <Button full disabled style={{backgroundColor: 'rgba(39, 171, 227, 1)', height: '75%'}}>\r\n                        <Text style={styles.edgeBlockText}>\r\n                            {isWorkspaceChosen ? 'Chosen parameters' : 'Choose parameters'}\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n\r\n                <View style={styles.centerBlock}>\r\n                    <ParameterButton name='Parameter #1' index={0} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/>\r\n                    <ParameterButton name='Parameter #2' index={1} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/>\r\n                    <ParameterButton name='Parameter #3' index={2} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/> \r\n                    <ParameterButton name='Parameter #4' index={3} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/> \r\n                </View>\r\n\r\n                <View style={styles.edgeBlock}>\r\n                    <BottomButton isWorkspaceChosen={isWorkspaceChosen}\r\n                                    setParamsSelected={this.props.setParamsSelected}\r\n                                    leaveButtonPressed={this.props.leaveButtonPressed} />\r\n                </View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\n//     edgeBlock: {\r\n//         flex: 1,\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center'\r\n//     },\r\n\r\n//     edgeBlockText: {\r\n//         color: 'white',\r\n//         fontFamily: 'roboto-light'\r\n//     },\r\n\r\n//     centerBlock: {\r\n//         // backgroundColor: 'green',\r\n//         flex: 5,\r\n//         width: '80%',\r\n//         alignSelf: 'center',\r\n//         alignItems: 'baseline',\r\n//         flexDirection: 'row',\r\n//         alignContent: 'space-around',\r\n//         justifyContent: 'space-around',\r\n//         flexWrap: 'wrap'\r\n//     }\r\n\r\n// })","import React, { Component } from 'react';\r\nimport Svg, {\r\n    Circle,\r\n    G,\r\n    Text,\r\n    Rect,\r\n    Path,\r\n    Line\r\n  } from 'react-native-svg';\r\n  import {Button} from 'native-base'\r\nimport {TouchableOpacity, View} from 'react-native'\r\n\r\nexport default class Map extends Component {\r\n\r\n    state = {\r\n        chosenSeat: this.props.workspaceNumber\r\n    }\r\n\r\n    setOpacity = num => {\r\n        if (num === this.state.chosenSeat || this.state.chosenSeat === null)\r\n            return '1'\r\n        else return '0.4'       \r\n    }\r\n\r\n    setSeat = num => {\r\n        if (this.props.areParamsSelected && this.props.workspaceNumber === null) {\r\n            if (this.props.avialableSeats.indexOf(num) !== -1) {\r\n                this.setState({\r\n                    chosenSeat: num\r\n                })\r\n                this.props.setLocalSeat(num)\r\n            }\r\n            else alert('You cannot choose it!')\r\n        }\r\n    }\r\n\r\n    setStatusCircle = num => {\r\n        if (!this.props.areParamsSelected) \r\n            return '#0a3db3'\r\n        else if (this.props.avialableSeats.indexOf(num) === -1)\r\n            return 'red'\r\n        else return '#25E5B7'\r\n    }\r\n\r\n    * generator(coordsX, coordsY) {\r\n        for (let i = 0; i < coordsX.length - 1; ++i) {\r\n            yield React.createElement(\r\n                Line,\r\n                {\r\n                    key: i,\r\n                    x1: coordsX[i].toString(),\r\n                    y1: coordsY[i].toString(),\r\n                    x2: coordsX[i + 1].toString(),\r\n                    y2: coordsY[i + 1].toString(),\r\n                    stroke: 'red',\r\n                    strokeWidth: '2',\r\n                    strokeLinecap: 'round'\r\n                }\r\n            )\r\n        }      \r\n    }\r\n\r\n    render() { \r\n        let locationX = 50\r\n        let locationY = 150 // буду получать\r\n\r\n        let coordsX = [30, 30, 75, 75, 170, 170]  // буду получать\r\n        let coordsY = [170, 135, 135, 65, 65, 55]\r\n        let path = null\r\n        if (this.props.workspaceNumber !== null && this.state.chosenSeat === 3 && !this.props.isWorkspaceChosen) {\r\n            path = [...this.generator(coordsX, coordsY)]\r\n        }\r\n\r\n        return(\r\n            <Svg  width='100%' height='100%' viewBox='0 0 200 200' fill=\"none\">\r\n\r\n                <G id='1' opacity={this.setOpacity(1)} onPressIn={() => this.setSeat(1)}>                             \r\n                    <Rect id=\"seat1\" x='10' y='10' width='40' height='40' stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='27' y='25' fontSize='10' fontWeight='bold' fill='#27ABE3'>1</Text>\r\n                    <Circle x='30' y='40' r='5' fill={this.setStatusCircle(1)} />         \r\n                </G>\r\n                      \r\n                <G id='2' opacity={this.setOpacity(2)} onPressIn={() => this.setSeat(2)}>\r\n                    <Rect id=\"seat2\" x=\"80\" y=\"10\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='97' y='25' fontSize='10' fontWeight='bold' fill='#27ABE3'>2</Text>\r\n                    <Circle x='100' y='40' r='5' fill={this.setStatusCircle(2)}/>\r\n                </G>\r\n\r\n                <G id='3' opacity={this.setOpacity(3)} onPressIn={() => this.setSeat(3)}>\r\n                    <Rect id=\"seat3\" x=\"150\" y=\"10\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='167' y='25' fontSize='10' fontWeight='bold' fill='#27ABE3'>3</Text>\r\n                    <Circle x='170' y='40' r='5' fill={this.setStatusCircle(3)} />\r\n                </G>\r\n\r\n                <G id='4' opacity={this.setOpacity(4)} onPressIn={() => this.setSeat(4)}>\r\n                    <Rect id=\"seat4\" x=\"10\" y=\"80\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='20' y='103' fontSize='10' fontWeight='bold' fill='#27ABE3'>4</Text>\r\n                    <Circle x='40' y='100' r='5' fill={this.setStatusCircle(4)} />\r\n                </G>\r\n\r\n                <G id='5' opacity={this.setOpacity(5)} onPressIn={() => this.setSeat(5)}>\r\n                    <Rect id=\"seat5\" x=\"100\" y=\"80\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='125' y='103' fontSize='10' fontWeight='bold' fill='#27ABE3'>5</Text>\r\n                    <Circle x='110' y='100' r='5' fill={this.setStatusCircle(5)} />\r\n                </G>\r\n\r\n                <G id='6' opacity={this.setOpacity(6)} onPressIn={() => this.setSeat(6)}>\r\n                    <Rect id=\"seat6\" x=\"150\" y=\"80\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='167' y='95' fontSize='10' fontWeight='bold' fill='#27ABE3'>6</Text>\r\n                    <Circle x='170' y='110' r='5' fill={this.setStatusCircle(6)} />\r\n                </G>\r\n\r\n                <G id='7' opacity={this.setOpacity(7)} onPressIn={() => this.setSeat(7)}>\r\n                    <Rect id=\"seat7\" x=\"80\" y=\"150\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='97' y='182' fontSize='10' fontWeight='bold' fill='#27ABE3'>7</Text>\r\n                    <Circle x='100' y='160' r='5' fill={this.setStatusCircle(7)} />\r\n                </G>\r\n\r\n                <G id='8' opacity={this.setOpacity(8)} onPressIn={() => this.setSeat(8)}>\r\n                    <Rect id=\"seat8\" x=\"150\" y=\"150\" width=\"40\" height=\"40\" stroke=\"#0a3db3\" rx='3'/>\r\n                    <Text x='167' y='182' fontSize='10' fontWeight='bold' fill='#27ABE3'>8</Text>\r\n                    <Circle x='170' y='160' r='5' fill={this.setStatusCircle(8)} />\r\n                </G>\r\n\r\n                <Path id=\"Arrow1\" d=\"M30.3536 180.646C30.1583 180.451 29.8417 180.451 29.6464 180.646L26.4645 183.828C26.2692 184.024 26.2692 184.34 26.4645 184.536C26.6597 184.731 26.9763 184.731 27.1716 184.536L30 181.707L32.8284 184.536C33.0237 184.731 33.3403 184.731 33.5355 184.536C33.7308 184.34 33.7308 184.024 33.5355 183.828L30.3536 180.646ZM30.5 190V181H29.5V190H30.5Z\" fill=\"#27ABE3\"/>\r\n                \r\n                <Circle x={locationX.toString()} y={locationY.toString()} r='3' fill='#27ABE3' />\r\n                <Circle x={locationX.toString()} y={locationY.toString()} r='4' stroke='#27ABE3' />\r\n\r\n                {path}\r\n            </Svg>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    topBlock: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    bottomBlock: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    takeButton: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)',\r\n        height: '75%',\r\n        borderRadius: 8\r\n    },\r\n\r\n    anotherPlaceButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)',\r\n        height: '75%',\r\n        borderRadius: 8\r\n    },\r\n\r\n    buttonText: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light'\r\n    }\r\n})\r\n\r\nexport default styles","import React, { Component } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Button, Text } from 'native-base'\r\nimport styles from './MapWindowStyles'\r\n\r\nexport default class MapBottomButtons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        let { workspaceNumber } = this.props\r\n        let { areParamsSelected } = this.props\r\n        let { isWorkspaceChosen } = this.props\r\n        let { seatNumber } = this.props\r\n        if (workspaceNumber === null && areParamsSelected) {\r\n            return (\r\n                <View style={styles.bottomBlock}>\r\n                    <Button style={styles.takeButton} \r\n                            onPress={() => this.props.takePlacePressed()}>\r\n                        <Text style={styles.buttonText}>\r\n                            {seatNumber === null ? 'Press to choose' : 'Take place ' + seatNumber}\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        } else if (areParamsSelected && !isWorkspaceChosen) {\r\n            return (\r\n                <View style={styles.bottomBlock}>\r\n                    <Button style={styles.takeButton}\r\n                            onPress={() => this.props.changeWorkspace(this.props.seatNumber, true)}>\r\n                        <Text style={styles.buttonText}>\r\n                            Switch on\r\n                        </Text>\r\n                    </Button>\r\n                    <Button style={styles.anotherPlaceButton}\r\n                            onPress={() => this.props.changeWorkspace(null, false)}>\r\n                        <Text style={styles.buttonText}>\r\n                            Choose another\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        } else return <View style={styles.bottomBlock}></View>\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {View} from 'react-native'\r\nimport {Button, Icon, Text, Container} from 'native-base'\r\nimport Map from './Map'\r\nimport styles from './MapWindowStyles'\r\nimport MapBottomButtons from './MapBottomButtons'\r\n\r\nexport default class MapWindow extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        seatNumber: this.props.workspaceNumber,\r\n        avialableSeats: [1, 3, 5, 7] // буду получать\r\n    }\r\n\r\n    setLocalSeat = (num) => {\r\n        this.setState({\r\n            seatNumber: num\r\n        })\r\n    }\r\n\r\n    takePlacePressed = () => {\r\n        if (this.state.seatNumber === null) \r\n            alert(\"Chose workspace please!\")\r\n        else this.props.changeWorkspace(this.state.seatNumber, false)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container style={{flex: 7, backgroundColor: 'rgba(211, 211, 211, 0.4)' }}>\r\n                <View style={styles.topBlock}>\r\n                    <Button transparent icon style={{height: '100%'}}>\r\n                        <Icon name='navigate' style={{color: 'rgba(39, 171, 227, 1)', fontSize: 35}} />\r\n                    </Button>\r\n                </View>\r\n\r\n                <View style={{flex: 5, justifyContent: 'center', alignContent: 'center'}}>\r\n\r\n                    <Map workspaceNumber={this.props.workspaceNumber} \r\n                        changeWorkspace={this.props.changeWorkspace}\r\n                        setLocalSeat={this.setLocalSeat}\r\n                        avialableSeats={this.state.avialableSeats}\r\n                        areParamsSelected={this.props.areParamsSelected}\r\n                        isWorkspaceChosen={this.props.isWorkspaceChosen}/>\r\n        \r\n                </View>\r\n\r\n                <MapBottomButtons workspaceNumber={this.props.workspaceNumber}\r\n                                    areParamsSelected={this.props.areParamsSelected}\r\n                                    isWorkspaceChosen={this.props.isWorkspaceChosen}\r\n                                    seatNumber={this.state.seatNumber}\r\n                                    takePlacePressed={this.takePlacePressed}\r\n                                    changeWorkspace={this.props.changeWorkspace} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {View, StyleSheet, Alert } from 'react-native'\r\nimport { Button, Text, Container } from 'native-base'\r\n\r\nexport default class Workspace extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    confirmExit = () => {\r\n        Alert.alert(\r\n            'Are you sure?',\r\n            '',\r\n            [\r\n                {text: 'Yes', onPress: () => this.props.checkExit(true)},\r\n                {\r\n                    text: 'No', \r\n                    onPress: () => this.props.checkExit(false), \r\n                    style: 'cancel'\r\n                },\r\n            ],\r\n            {cancelable: false},\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container style={{flex: 12, backgroundColor: 'rgba(211, 211, 211, 0.4)'}}>\r\n                <View style={{flex: 1}}></View>\r\n                <View style={styles.mainView}>\r\n\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>View history</Text>\r\n                        </Button>\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>Set default parameters</Text>\r\n                        </Button>\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>Sth else</Text>\r\n                        </Button>\r\n\r\n                        <Button style={styles.exitButton}\r\n                                onPress={() => this.confirmExit()}>\r\n                            <Text style={styles.text}>Exit</Text>\r\n                        </Button>\r\n                  \r\n                </View>\r\n                <View style={{flex: 1}}></View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainView: {\r\n        flex: 10,\r\n        alignItems: 'center'\r\n    },\r\n\r\n    text: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light',\r\n        marginBottom: 0\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)', \r\n        height: '15%',\r\n        marginBottom: '5%',\r\n        width: '70%',\r\n        justifyContent: 'center',\r\n        borderRadius: 8\r\n        // alignContent: 'center',\r\n        // textAlignVertical: 'center'\r\n    },\r\n\r\n    exitButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)', \r\n        height: '15%',\r\n        width: '70%',\r\n        justifyContent: 'center',\r\n        borderRadius: 100\r\n    }\r\n})","import {StyleSheet} from 'react-native'\r\n\r\nconst headerStyles = StyleSheet.create({\r\n    header: {\r\n        backgroundColor: 'rgba(10, 61, 179, 1.0)',\r\n        height: '10%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    left: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: '3%'\r\n    },\r\n\r\n    right: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'space-between',\r\n        // alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n        marginRight: '3%',\r\n        // maxWidth: '50%'\r\n    },\r\n\r\n    elem: {\r\n        alignItems: 'center',\r\n        marginBottom: '5%',\r\n        marginRight: '5%',\r\n        marginLeft: '3%'\r\n    },\r\n\r\n    text: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light',\r\n        fontSize: 15\r\n    }\r\n})\r\n\r\nexport default headerStyles\r\n","import React, { Component } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Icon, Text } from 'native-base'\r\nimport headerStyles from './HeaderStyles'\r\n\r\nexport default class MainHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setWorkspaceText = () => {\r\n        const {workspaceNumber} = this.props\r\n        if (workspaceNumber === null) \r\n            return 'Not chosen'\r\n        else return workspaceNumber.toString()\r\n    }\r\n\r\n    setTimer = (timerOn) => {\r\n        if (timerOn) {\r\n            return(\r\n                <View style={headerStyles.left}>\r\n                    <Icon style={{color: 'white'}} name='alarm' />\r\n                    <Text style={headerStyles.text}>\r\n                        {this.props.timerTime}\r\n                    </Text>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {login} = this.props\r\n        return(\r\n            <View style={headerStyles.header}>\r\n                <View style={headerStyles.left}>\r\n                    <Icon style={{color: 'white'}} name='tv' />\r\n                    <Text style={headerStyles.text}>\r\n                        {this.setWorkspaceText()}\r\n                    </Text>\r\n                </View>\r\n\r\n                {this.setTimer(this.props.timerOn)}\r\n\r\n                <View style={headerStyles.right}>\r\n                    <Icon style={{ color: 'white'}} name='contact' />\r\n                    <Text style={[ headerStyles.text]}>\r\n                        {login.toString().length < 15 ? login : login.substr(0, 12) + '...'}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}","import {StyleSheet} from 'react-native'\r\n\r\nconst timerStyles = StyleSheet.create({\r\n    mainView: {\r\n        flex: 7,\r\n        backgroundColor: 'gray',\r\n    },\r\n\r\n    block: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    centerBlock: {\r\n        borderBottomColor: 'white',\r\n        borderBottomWidth: 2,\r\n        paddingBottom: '5%',\r\n    },\r\n\r\n    stopWatch: {\r\n        color: 'white',\r\n        fontSize: 40,\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    edgeBlockText: {\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    leaveButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)', \r\n        height: '75%'\r\n    },\r\n\r\n    yourTimeButton: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)', \r\n        height: '75%'\r\n    }\r\n})\r\n\r\nexport default timerStyles","import React, {Component} from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport FooterMenu from './FooterMenu'\r\nimport { Container, Title , Header } from 'native-base';\r\nimport WorkspaceParameters from './ParamsWindow/WorkspaceParameters'\r\nimport MapWindow from './MapComponents/MapWindow'\r\nimport Settings from './Settings'\r\nimport MainHeader from './Header/MainHeader';\r\nimport SeatTimer from './Timer/SeatTimer'\r\n\r\n\r\nexport default class MainApp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            window: 'workspace',\r\n            workspaceNumber: null,\r\n            isWorkspaceChosen: false,\r\n            areParamsSelected: false,\r\n            chosenParameters: [false, false, false, false],\r\n\r\n            timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n        }\r\n    }\r\n\r\n    changeWindow = e => {\r\n        this.setState({\r\n            window: e,\r\n        })\r\n    }\r\n\r\n    changeWorkspace = (num, switchFlag) => {\r\n        if (num !== null) {\r\n            this.setState({\r\n                workspaceNumber: num,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                workspaceNumber: null,\r\n                isWorkspaceChosen: false,\r\n            })\r\n        }\r\n        if (switchFlag) this.startTimer()\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({\r\n            isWorkspaceChosen: true,\r\n            window: 'workspace',\r\n            timerOn: true,\r\n            timerTime: this.state.timerTime,\r\n            timerStart: Date.now() - this.state.timerTime\r\n        })\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                timerTime: Date.now() - this.state.timerStart\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    leaveButtonPressed = () => {\r\n        alert( \"Your time:\\n\" + this.formatTime(this.state.timerTime))\r\n        this.setState({ \r\n            timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n        clearInterval(this.timer);\r\n\r\n        this.changeWorkspace(null)\r\n        this.setParamsSelected(false)\r\n    }\r\n\r\n    formatTime = ms => {\r\n        let seconds = (\"0\" + (Math.floor(ms / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(ms / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(ms / 3600000)).slice(-2);\r\n        return (hours.toString() + \" : \" + minutes.toString() + \" : \" + seconds.toString())\r\n    }\r\n\r\n    setParamsSelected = flag => {\r\n        if (flag) {\r\n            this.setState({\r\n                areParamsSelected: true,\r\n                window: 'map'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                areParamsSelected: false\r\n            })\r\n        }\r\n    }\r\n\r\n    changeChosenParams = index => {\r\n        var array = this.state.chosenParameters\r\n        if (!array[index]) {\r\n            array[index] = true\r\n        } else array[index] = false\r\n        this.setState({\r\n            chosenParameters: array\r\n        })\r\n    }\r\n\r\n    setMainWindow = () => {\r\n        if (this.state.window === 'workspace') {\r\n            // if (this.state.isWorkspaceChosen) \r\n            //     return <SeatTimer leaveButtonPressed={this.leaveButtonPressed}\r\n            //                         timerTime={this.state.timerTime}\r\n            //                         formatTime={this.formatTime}/>\r\n            // else return <WorkspaceParameters setParamsSelected={this.setParamsSelected}/>\r\n            return <WorkspaceParameters setParamsSelected={this.setParamsSelected}\r\n                                        chosenParameters={this.state.chosenParameters}\r\n                                        changeChosenParams={this.changeChosenParams}\r\n                                        isWorkspaceChosen={this.state.isWorkspaceChosen}\r\n                                        leaveButtonPressed={this.leaveButtonPressed}/>\r\n        } else if (this.state.window === 'map') {\r\n            return <MapWindow workspaceNumber={this.state.workspaceNumber} \r\n                                changeWorkspace={this.changeWorkspace}\r\n                                areParamsSelected={this.state.areParamsSelected}\r\n                                isWorkspaceChosen={this.state.isWorkspaceChosen}/>\r\n        } else if (this.state.window === 'settings') {\r\n            return <Settings checkExit={this.props.checkExit}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Header transparent style={styles.header}>\r\n                    <Title style={styles.title}>APP NAME</Title>\r\n                </Header>\r\n\r\n                <MainHeader login={this.props.login} workspaceNumber={this.state.workspaceNumber}\r\n                            timerOn={this.state.timerOn} timerTime={this.formatTime(this.state.timerTime)}/>\r\n\r\n                {this.setMainWindow()}\r\n\r\n                <FooterMenu changeWindow={this.changeWindow} \r\n                            currentState={this.state.window}\r\n                            isWorkspaceChosen={this.state.isWorkspaceChosen} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        backgroundColor: 'white',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    title: {\r\n        color: 'rgba(35, 71, 152, 1.0)',\r\n        justifyContent: 'flex-end',\r\n        fontFamily: 'roboto-light'\r\n    }\r\n})\r\n","import React, { Component } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Text, Button, Container } from 'native-base'\r\nimport timerStyles from './TimerStyles'\r\n\r\nexport default class SeatTimer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const { timerTime } = this.props\r\n        return(\r\n            <Container style={timerStyles.mainView}> \r\n                <View style={[ {flex: 1}, timerStyles.block ]}>\r\n                    <Button full disabled style={timerStyles.yourTimeButton}>\r\n                            \r\n                        <Text style={timerStyles.edgeBlockText}>Your time</Text>\r\n                    </Button>\r\n                </View>\r\n\r\n                <View style={[ {flex: 5}, timerStyles.block ]}>\r\n                    <View style={timerStyles.centerBlock}>\r\n                        <Text style={timerStyles.stopWatch}>\r\n                            { this.props.formatTime(timerTime) }\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={[ {flex: 1}, timerStyles.block ]}>\r\n                    <Button style={timerStyles.leaveButton}\r\n                            onPressIn={() => this.props.leaveButtonPressed()}>\r\n                        <Text style={timerStyles.edgeBlockText}>Leave workspace</Text>\r\n                    </Button>\r\n                </View>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}","import AuthWindow from './SignIn/AuthWindow';\nimport MainApp from './MainApp/MainApp';\nimport React, {Component} from 'react';\n\nimport * as Font from 'expo-font'\n\nexport default class App extends Component {\n    state = {\n        renderView: 0,\n        login: '',\n        fontLoaded: false\n    };\n\n    async componentDidMount() {\n        await Font.loadAsync({\n          'roboto-light': require('./assets/fonts/Roboto-Light.ttf'),\n          'Roboto_medium': require('./assets/fonts/Roboto-Medium.ttf')\n        });\n\n        this.setState({ fontLoaded: true })\n    }\n\n    checkData = (flag, someLogin, somePassword) => {\n        if (flag) {\n            // fetch('url', {\n            //     method: 'POST',\n            //     headers: {\n            //         Accept: 'application/json',\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({\n            //         username: someLogin,\n            //         password: somePassword,\n            //     }),\n            // })\n            // .then((response) => response.json())\n            // .then((responseJson) => {\n            //     return responseJson.acception;\n            // })\n            // .catch((error) => {\n            //     // console.error(error);\n            //     alert(error)\n            // });\n\n\n            this.setState({ \n                renderView: 1,\n                login: someLogin\n            })\n        }\n    }\n\n    checkExit = flag => {\n        if (flag) {\n            this.setState({\n                correctData: false,\n                login: '',\n                renderView: 0\n            })\n        }\n    }\n\n    render() {\n\n        if (this.state.fontLoaded) {\n            if (this.state.renderView === 1) {\n            return <MainApp login={this.state.login} checkExit={this.checkExit}/>\n            } else return <AuthWindow checkData={this.checkData}/>\n        } else return null\n        \n    }\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Medium.ttf\";"],"sourceRoot":""}