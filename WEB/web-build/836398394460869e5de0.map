{"version":3,"sources":["C:/repos/employment-control-system/WEB/SignIn/styles.js","C:/repos/employment-control-system/WEB/SignIn/Form.js","C:/repos/employment-control-system/WEB/SignIn/AuthWindow.js","C:/repos/employment-control-system/WEB/MainApp/FooterMenu.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/ParameterButton.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/ParametersStyles.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/BottomButton.js","C:/repos/employment-control-system/WEB/MainApp/ParamsWindow/WorkspaceParameters.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/TouchableOpacityG.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/WorkplaceOnMap.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/Map.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapWindowStyles.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapBottomButtons.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/TopMenu.js","C:/repos/employment-control-system/WEB/MainApp/MapComponents/MapWindow.js","C:/repos/employment-control-system/WEB/MainApp/Settings.js","C:/repos/employment-control-system/WEB/MainApp/Header/HeaderStyles.js","C:/repos/employment-control-system/WEB/MainApp/Header/MainHeader.js","C:/repos/employment-control-system/WEB/MainApp/Timer/TimerStyles.js","C:/repos/employment-control-system/WEB/MainApp/MainApp.js","C:/repos/employment-control-system/WEB/MainApp/Timer/SeatTimer.js","C:/repos/employment-control-system/WEB/App.js","C:/repos/employment-control-system/WEB/web-build/register-service-worker.js","C:/repos/employment-control-system/WEB/assets/fonts/Roboto-Light.ttf","C:/repos/employment-control-system/WEB/assets/fonts/Roboto-Medium.ttf"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","alignContent","signWindow","width","maxWidth","height","flexDirection","alignSelf","appName","color","fontSize","borderWidth","borderStyle","borderColor","borderRadius","padding","fontFamily","shadowRadius","shadowOpacity","authText","marginVertical","textShadowRadius","textShadowColor","form","field","paddingLeft","minHeight","marginBottom","signInBtn","marginTop","Form","loginInput","passwordInput","View","style","TextInput","placeholder","textContentType","onChangeText","val","secureTextEntry","AuthWindow","props","handleButtonClick","state","login","password","setState","correctData","alert","setLogin","setPassword","checkData","this","KeyboardAvoidingView","behavior","enabled","onPress","Component","FooterMenu","setColor","buttonName","currentState","textStyle","changeWindow","firstButtonText","isWorkspaceChosen","vertical","name","ParameterButton","setOpacity","index","chosenParams","setIcon","buttonPressed","changeChosenParams","toString","TouchableHighlight","underlayColor","button","background","alignItems","edgeBlock","edgeBlockText","centerBlock","flexWrap","BottomButtom","leaveConfirm","confirm","leaveButtonPressed","setParamsSelected","WorkspaceParameters","chosenParameters","full","disabled","AnimatedG","Animated","createAnimatedComponent","G","TouchableOpacityG","componentDidUpdate","prevProps","prevState","_opacityInactive","setOpacityTo","value","duration","timing","anim","toValue","easing","Easing","inOut","quad","useNativeDriver","start","touchableHandleActivePressIn","e","dispatchConfig","registrationName","_opacityActive","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandlePress","touchableHandleLongPress","onLongPress","activeOpacity","_getChildStyleOpacityWithDefault","childStyle","flattenStyle","Array","isArray","result","i","styleLength","length","computedStyle","key","opacity","Value","children","defaultProps","WorkplaceOnMap","setCoords","x","y","orientation","x_text","y_text","x_circle","y_circle","num","coords","setSeat","stroke","rx","fontWeight","fill","setStatusCircle","Map","seatNumber","areParamsSelected","workspaceNumber","avialableSeats","indexOf","setLocalSeat","coordsX","coordsY","React","createElement","Line","x1","y1","x2","y2","strokeWidth","strokeLinecap","path","generator","viewBox","id","d","locationX","locationY","AppRegistry","registerComponent","topBlock","bottomBlock","takeButton","anotherPlaceButton","buttonText","seatInput","textAlign","paddingHorizontal","MapBottomButtons","takePlacePressed","isNaN","changeWorkspace","TopMenu","isEditable","parseInt","maxLength","editable","transparent","icon","MapWindow","seat","showInput","Workspace","confirmExit","timerOn","checkExit","mainView","text","exitButton","headerStyles","header","maxHeight","left","marginLeft","right","marginRight","elem","MainHeader","setWorkspaceText","setTimer","timerTime","substr","timerStyles","block","borderBottomColor","borderBottomWidth","paddingBottom","stopWatch","leaveButton","yourTimeButton","MainApp","formatTime","window","switchFlag","startTimer","timerStart","Date","now","timer","setInterval","clearInterval","ms","seconds","Math","floor","slice","minutes","flag","array","setMainWindow","title","App","renderView","fontLoaded","token","someLogin","somePassword","Font","require","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"8OAgFeA,EA9EAC,IAAWC,OAAO,CAC7BC,UAAW,CACPC,KAAM,EACNC,gBAAiB,yBACjBC,eAAgB,SAChBC,aAAc,UAGlBC,WAAY,CACRC,MAAO,MACPC,SAAU,IACVC,OAAQ,OACRC,cAAe,SACfC,UAAW,SACXP,eAAgB,iBAGpBQ,QAAS,CACLD,UAAW,SACXE,MAAO,QACPC,SAAU,GACVC,YAAa,EACbC,YAAa,QACbC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,WAAY,eACZC,aAAc,EACdC,cAAe,GAGnBC,SAAU,CACNV,MAAO,QACPC,SAAU,GACVH,UAAW,SACXa,eAAgB,GAChBJ,WAAY,eACZK,iBAAkB,EAClBC,gBAAiB,SAKrBC,KAAM,CACFlB,OAAQ,MACRI,MAAO,kBACPH,cAAe,SACfN,eAAgB,iBAGpBwB,MAAO,CACHC,YAAa,GACbC,UAAW,GACXrB,OAAQ,MACRN,gBAAiB,QACjBe,aAAc,EACdG,aAAc,GACdC,cAAe,GACfF,WAAY,eACZN,SAAU,GACViB,aAAc,IAIlBC,UAAW,CACPC,UAAW,GACXtB,UAAW,SACXR,gBAAiB,uBACjBC,eAAgB,SAChB0B,UAAW,GACXrB,OAAQ,MACRF,MAAO,MACPW,aAAc,IACdG,aAAc,GACdC,cAAe,M,QCxDRY,EAhBF,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,cAAd,OACT,kBAACC,EAAA,EAAD,CAAMC,MAAOxC,EAAO6B,MAChB,kBAACY,EAAA,EAAD,CAAWD,MAAOxC,EAAO8B,MACrBY,YAAa,QACbC,gBAAiB,WACjBC,aAAc,SAAAC,GAAG,OAAIR,EAAWQ,MAEpC,kBAACJ,EAAA,EAAD,CAAWD,MAAOxC,EAAO8B,MACrBY,YAAa,WACbC,gBAAiB,WACjBC,aAAc,SAAAC,GAAG,OAAIP,EAAcO,IACnCC,iBAAiB,MCTRC,E,YACjB,WAAYC,GAAQ,IAAD,sBACf,4BAAMA,KAQVC,kBAAoB,WAEhB,OAAI,EAAKC,MAAMC,OAAS,EAAKD,MAAME,UAC/B,EAAKC,SAAS,CAAEC,aAAa,KACtB,IAEPC,MAAM,4BACC,IAhBI,EAwBnBC,SAAW,SAAAX,GACP,EAAKQ,SAAS,CAAEF,MAAON,KAzBR,EA4BnBY,YAAc,SAAAZ,GACV,EAAKQ,SAAS,CAAED,SAAUP,KA3B1B,EAAKK,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVE,aAAa,GALF,E,sDAgCT,IAAD,OACDI,EAAYC,KAAKX,MAAMU,UAC3B,OACI,kBAACE,EAAA,EAAD,CAAsBpB,MAAOxC,EAAOG,UAAW0D,SAAS,UAAUC,SAAO,GACrE,kBAACvB,EAAA,EAAD,CAAMC,MAAOxC,EAAOQ,YAChB,kBAAC,OAAD,CAAMgC,MAAOxC,EAAOc,SAApB,YACA,kBAAC,OAAD,CAAM0B,MAAOxC,EAAOyB,UAApB,iBACA,kBAAC,EAAD,CACIY,WAAYsB,KAAKH,SACjBlB,cAAeqB,KAAKF,cAExB,kBAAC,SAAD,CAAQjB,MAAOxC,EAAOkC,UACd6B,QAAS,kBAAOL,EAAU,EAAKT,oBAAqB,EAAKC,MAAMC,MAAO,EAAKD,MAAME,YAErF,kBAAC,OAAD,CAAMZ,MAAO,CAACzB,MAAO,QAASO,WAAY,iBAA1C,kB,GA/CgB0C,aCHnBC,E,YACjB,WAAYjB,GAAQ,IAAD,sBACf,4BAAMA,KAGVkB,SAAW,SAACC,GAER,OADY,EAAKnB,MAAMoB,eACTD,EACF,CAACpD,MAAO,yBACP,CAACA,MAAO,2BARN,EAWnBsD,UAAY,SAACF,GACT,MAAQ,CAAE,CAACnD,SAAU,GAAIM,WAAY,gBAAiB,EAAK4C,SAASC,KAZrD,E,sDAgBf,IAAIG,EAAeX,KAAKX,MAAMsB,aAC1BC,EAAkBZ,KAAKX,MAAMwB,kBAAoB,OAAS,aAC9D,OACI,kBAAC,SAAD,KACI,kBAAC,YAAD,CAAWhC,MAAO,CAACnC,gBAAiB,QAASkB,aAAc,EAAGC,cAAe,KAEzE,kBAAC,SAAD,CAAQiD,UAAQ,EAACV,QAAS,kBAAMO,EAAa,eACzC,kBAAC,OAAD,CAAMI,KAAK,KAAKlC,MAAOmB,KAAKO,SAAS,eACrC,kBAAC,OAAD,CAAM1B,MAAOmB,KAAKU,UAAU,cACvBE,IAIT,kBAAC,SAAD,CAAQE,UAAQ,EAACV,QAAS,kBAAMO,EAAa,SACzC,kBAAC,OAAD,CAAMI,KAAK,MAAMlC,MAAOmB,KAAKO,SAAS,SACtC,kBAAC,OAAD,CAAM1B,MAAOmB,KAAKU,UAAU,QAA5B,QAKJ,kBAAC,SAAD,CAAQI,UAAQ,EAACV,QAAS,kBAAMO,EAAa,cACzC,kBAAC,OAAD,CAAMI,KAAK,WAAWlC,MAAOmB,KAAKO,SAAS,cAC3C,kBAAC,OAAD,CAAM1B,MAAOmB,KAAKU,UAAU,aAA5B,mB,GAvCgBL,a,QCCnBW,E,YACjB,WAAY3B,GAAQ,IAAD,sBACf,4BAAMA,KAGV4B,WAAa,SAAAC,GACT,OAAO,EAAK7B,MAAM8B,aAAaD,GAAS,EAAI,IAL7B,EAQnBX,SAAW,SAAAW,GACP,OAAO,EAAK7B,MAAM8B,aAAaD,GAAS,yBAA2B,sBATpD,EAYnBE,QAAU,SAAAF,GACN,OAAO,EAAK7B,MAAM8B,aAAaD,GAAS,aAAe,yBAbxC,EAgBnBG,cAAgB,SAAAH,GACP,EAAK7B,MAAMwB,mBACZ,EAAKxB,MAAMiC,mBAAmBJ,IAlBnB,E,sDAsBT,IAAD,OACLH,KAAOf,KAAKX,MAAM0B,KAAKQ,WADlB,IAEEL,EAASlB,KAAKX,MAAd6B,MACP,OACI,kBAACM,EAAA,EAAD,CAAoBpB,QAAS,kBAAM,EAAKiB,cAAcH,IAClCO,cAAc,cACd5C,MAAO,CAAC7B,OAAQ,MAAOF,MAAO,MAAOC,SAAU,MAE/D,kBAAC6B,EAAA,EAAD,CAAMC,MAAO,CAACxC,EAAOqF,OAAQ,CAAChF,gBAAiBsD,KAAKO,SAASW,MACzD,kBAAC,OAAD,CAAMrC,MAAO,CAACzB,MAAO,QAASC,SAAU,IAAK0D,KAAMf,KAAKoB,QAAQF,KAChE,kBAAC,OAAD,CAAMrC,MAAO,CAACzB,MAAO,QAASC,SAAU,GAAIM,WAAY,iBACnDoD,Y,GAlCoBV,aA0CvChE,EAASC,IAAWC,OAAO,CAC7BoF,WAAY,CACR3E,OAAQ,MACRF,MAAO,MACPC,SAAU,KAGd2E,OAAQ,CACJE,WAAY,SACZlF,gBAAiB,mBACjBO,cAAe,MACfN,eAAgB,eAChBc,aAAc,EACdT,OAAQ,UCtBDX,EAnCAC,IAAWC,OAAO,CAC7BsF,UAAW,CACPpF,KAAM,EACNmF,WAAY,SACZjF,eAAgB,UAGpBmF,cAAe,CACX1E,MAAO,QACPO,WAAY,gBAGhBoE,YAAa,CAETtF,KAAM,EACNK,MAAO,MACPI,UAAW,SACX0E,WAAY,SACZ3E,cAAe,SACfL,aAAc,SACdD,eAAgB,eAChBqF,SAAU,QAIdN,OAAQ,CACJhF,gBAAiB,uBACjBM,OAAQ,MACRS,aAAc,EACdX,MAAO,MACPH,eAAgB,SAChBI,SAAU,OC5BGkF,E,mLACjBC,aAAe,WAkBPC,QAAQ,kBACR,EAAK9C,MAAM+C,sB,wDAIT,IAAD,OAEL,OAD0BpC,KAAKX,MAA1BwB,kBAUG,kBAAC,SAAD,CAAQhC,MAAOxC,EAAOqF,OACdtB,QAAS,kBAAM,EAAK8B,iBACxB,kBAAC,OAAD,CAAMrD,MAAOxC,EAAOyF,eAApB,oBATJ,kBAAC,SAAD,CAAQjD,MAAOxC,EAAOqF,OACdtB,QAAS,kBAAM,EAAKf,MAAMgD,mBAAkB,KAChD,kBAAC,OAAD,CAAMxD,MAAOxC,EAAOyF,eAApB,yB,GA9BsBzB,aCErBiC,E,YACjB,WAAYjD,GAAO,6CACTA,I,sDAGA,IACAkD,EAAqBvC,KAAKX,MAA1BkD,iBACAjB,EAAuBtB,KAAKX,MAA5BiC,mBACAT,EAAsBb,KAAKX,MAA3BwB,kBACN,OACI,kBAAC,YAAD,CAAWhC,MAAO,CAACpC,KAAM,EAAGC,gBAAiB,6BACzC,kBAACkC,EAAA,EAAD,CAAMC,MAAOxC,EAAOwF,WAChB,kBAAC,SAAD,CAAQW,MAAI,EAACC,UAAQ,EAAC5D,MAAO,CAACnC,gBAAiB,wBAAyBM,OAAQ,QAC5E,kBAAC,OAAD,CAAM6B,MAAOxC,EAAOyF,eACfjB,EAAoB,oBAAsB,uBAKvD,kBAACjC,EAAA,EAAD,CAAMC,MAAOxC,EAAO0F,aAChB,kBAAC,EAAD,CAAiBhB,KAAK,eAAeG,MAAO,EAAGC,aAAcoB,EACzCjB,mBAAoBA,EACpBT,kBAAmBA,IACvC,kBAAC,EAAD,CAAiBE,KAAK,eAAeG,MAAO,EAAGC,aAAcoB,EACzCjB,mBAAoBA,EACpBT,kBAAmBA,IACvC,kBAAC,EAAD,CAAiBE,KAAK,eAAeG,MAAO,EAAGC,aAAcoB,EACzCjB,mBAAoBA,EACpBT,kBAAmBA,IACvC,kBAAC,EAAD,CAAiBE,KAAK,eAAeG,MAAO,EAAGC,aAAcoB,EACzCjB,mBAAoBA,EACpBT,kBAAmBA,KAG3C,kBAACjC,EAAA,EAAD,CAAMC,MAAOxC,EAAOwF,WAChB,kBAAC,EAAD,CAAchB,kBAAmBA,EACjBwB,kBAAmBrC,KAAKX,MAAMgD,kBAC9BD,mBAAoBpC,KAAKX,MAAM+C,2B,GArClB/B,a,yCCH3CqC,EAAYC,IAASC,wBAAwBC,K,IAkF9BC,E,mLAKjBC,mBAAqB,SAACC,EAAWC,GACzB,EAAK5D,MAAMoD,WAAaO,EAAUP,UAClC,EAAKS,iBAAiB,M,EAO9BC,aAAe,SAACC,EAAOC,GACnBV,IAASW,OAAO,EAAK/D,MAAMgE,KAAM,CAC7BC,QAASJ,EACTC,SAAUA,EACVI,OAAQC,IAAOC,MAAMD,IAAOE,MAC5BC,iBAAiB,IAClBC,S,EAGPC,6BAA+B,SAAAC,GACe,qBAAtCA,EAAEC,eAAeC,iBACjB,EAAKC,eAAe,GAEpB,EAAKA,eAAe,KAExB,EAAK9E,MAAM+E,WAAa,EAAK/E,MAAM+E,UAAUJ,I,EAGjDK,8BAAgC,SAAAL,GAC5B,EAAKd,iBAAiB,KACtB,EAAK7D,MAAMiF,YAAc,EAAKjF,MAAMiF,WAAWN,I,EAGnDO,qBAAuB,SAAAP,GACnB,EAAK3E,MAAMe,SAAW,EAAKf,MAAMe,QAAQ4D,I,EAG7CQ,yBAA2B,SAAAR,GACvB,EAAK3E,MAAMoF,aAAe,EAAKpF,MAAMoF,YAAYT,I,EAGrDG,eAAiB,SAAAd,GACb,EAAKF,aAAa,EAAK9D,MAAMqF,cAAerB,I,EAGhDH,iBAAmB,SAAAG,GACf,EAAKF,aAAa,EAAKwB,mCAAoCtB,I,EAG/DsB,iCAAmC,WAC/B,IAAMC,EAtId,SAASC,EAAahG,GAClB,GAAc,OAAVA,GAAmC,kBAAVA,EAA7B,CAIA,IAAKiG,MAAMC,QAAQlG,GACf,OAAOA,EAIX,IADA,IAAMmG,EAAS,GACNC,EAAI,EAAGC,EAAcrG,EAAMsG,OAAQF,EAAIC,IAAeD,EAAG,CAC9D,IAAMG,EAAgBP,EAAahG,EAAMoG,IACzC,GAAIG,EACA,IAAK,IAAMC,KAAOD,EACdJ,EAAOK,GAAOD,EAAcC,GAIxC,OAAOL,GAoHgBH,CAAa,EAAKxF,MAAMR,QAAU,GACrD,OAA6B,MAAtB+F,EAAWU,QAAkB,EAAIV,EAAWU,S,EAGvD/F,MAAQ,CACJgE,KAAM,IAAIZ,IAAS4C,MAAM,EAAKZ,qC,wDAI9B,OACI,kBAACjC,EAAD,CACI4C,QAAStF,KAAKT,MAAMgE,KACpBnD,QAASJ,KAAKuE,qBACdE,YAAazE,KAAKwE,yBAClBJ,UAAWpE,KAAK+D,6BAChBO,WAAYtE,KAAKqE,+BAEhBrE,KAAKX,MAAMmG,c,GAvEmBnF,aAA1ByC,EACV2C,aAAe,CAClBf,cAAe,I,IChFFgB,E,mLAEjBC,UAAY,SAACC,EAAGC,EAAG/I,EAAOgJ,GACtB,IAAIC,EAAS,EACTC,EAAS,EACTC,EAAW,EACXC,EAAW,EAuBf,MAtBmB,QAAfJ,GACAC,EAASH,EAAI,KAAQ9I,EACrBkJ,EAASH,EAAI,KAAQ/I,EACrBmJ,EAAWL,EAAI,KAAQ9I,EACvBoJ,EAAWL,EAAI,KAAQ/I,GACD,SAAfgJ,GACPC,EAASH,EAAI,IAAO9I,EACpBkJ,EAASH,EAAI,KAAQ/I,EACrBmJ,EAAWL,EAAI,KAAQ9I,EACvBoJ,EAAWL,EAAI,KAAQ/I,GACD,MAAfgJ,GACPC,EAASH,EAAI,KAAQ9I,EACrBkJ,EAASH,EAAI,GAAM/I,EACnBmJ,EAAWL,EAAI,KAAQ9I,EACvBoJ,EAAWL,EAAI,KAAQ/I,GACD,QAAfgJ,IACPC,EAASH,EAAI,KAAQ9I,EACrBkJ,EAASH,EAAI,KAAQ/I,EACrBmJ,EAAWL,EAAI,KAAQ9I,EACvBoJ,EAAWL,EAAI,KAAQ/I,GAGpB,CAACiJ,EAAQC,EAAQC,EAAUC,I,wDAG5B,IAAD,OACGN,EAAM5F,KAAKX,MAAXuG,EACAC,EAAM7F,KAAKX,MAAXwG,EACA/I,EAAUkD,KAAKX,MAAfvC,MACAgJ,EAAgB9F,KAAKX,MAArByG,YACAK,EAAQnG,KAAKX,MAAb8G,IACFC,EAASpG,KAAK2F,UAAUC,EAAGC,EAAG/I,EAAOgJ,GAE3C,OACI,kBAAC,EAAD,CAAmB1F,QAAS,kBAAM,EAAKf,MAAMgH,QAAQF,KACjD,kBAAC,IAAD,CACIP,EAAGA,EAAGC,EAAGA,EACT/I,MAAOA,EACPE,OAAQF,EACRwJ,OAAO,UACPC,GAAG,IACHjB,QAAStF,KAAKX,MAAM4B,WAAWkF,KACnC,kBAAC,IAAD,CACIP,EAAGQ,EAAO,GACVP,EAAGO,EAAO,GACV/I,SAAS,KACTmJ,WAAW,OAEXC,KAAK,WAEJN,GAEL,kBAAC,IAAD,CACIP,EAAGQ,EAAO,GACVP,EAAGO,EAAO,GACVtJ,MAAOA,EAAQ,EACfE,OAAQF,EAAQ,EAChB2J,KAAMzG,KAAKX,MAAMqH,gBAAgBP,GACjCI,GAAIzJ,EAAQ,S,GAjEYuD,a,QCCvBsG,E,mLAEjB1F,WAAa,SAAAkF,GACT,OAAIA,IAAQ,EAAK9G,MAAMuH,YAAwC,OAA1B,EAAKvH,MAAMuH,WACrC,IACC,O,EAGhBP,QAAU,SAAAF,GACF,EAAK9G,MAAMwH,mBAAoD,OAA/B,EAAKxH,MAAMyH,mBACK,IAA5C,EAAKzH,MAAM0H,eAAeC,QAAQb,GAClC,EAAK9G,MAAM4H,aAAad,GAEvBvG,MAAM,2B,EAInB8G,gBAAkB,SAAAP,GACd,OAAK,EAAK9G,MAAMwH,mBAEqC,IAA5C,EAAKxH,MAAM0H,eAAeC,QAAQb,GAChC,MACC,UAHD,W,qEAMHA,G,2EACJe,EAAS,GACTC,EAAU,GACF,IAARhB,GAAqB,IAARA,GACbgB,EAAU,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,IAClCD,EAAkB,IAARf,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,MACxD,IAARA,GACPe,EAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,MAChB,IAARhB,IACPe,EAAU,CAAC,GAAI,GAAI,IAAK,KACxBC,EAAU,CAAC,IAAK,IAAK,IAAK,MAErBlC,EAAI,E,YAAGA,EAAIiC,EAAQ/B,OAAS,G,iBACjC,O,SAAMiC,IAAMC,cACRC,IACA,CACIjC,IAAKJ,EACLsC,GAAIL,EAAQjC,GAAG1D,WACfiG,GAAIL,EAAQlC,GAAG1D,WACfkG,GAAIP,EAAQjC,EAAI,GAAG1D,WACnBmG,GAAIP,EAAQlC,EAAI,GAAG1D,WACnB+E,OAAQ,MACRqB,YAAa,IACbC,cAAe,U,SAXe3C,E,0FAkB1C,IAKI4C,EAAO,KAMX,OALmC,OAA/B7H,KAAKX,MAAMyH,iBAA6B9G,KAAKX,MAAMwB,oBAEnDgH,EAAI,IAAO7H,KAAK8H,UAAU9H,KAAKX,MAAMuH,cAIrC,kBAAC,IAAD,CAAM9J,MAAM,OAAOE,OAAO,OAAO+K,QAAQ,cAActB,KAAK,QAExD,kBAAC,EAAD,CAAgBb,EAAG,GAAIC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC9BL,YAAa,OACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,GAAIC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC9BL,YAAa,OACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,IAAKC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC/BL,YAAa,OACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,GAAIC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC9BL,YAAa,QACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,IAAKC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC/BL,YAAa,OACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,IAAKC,EAAG,GAAI/I,MAAO,GAAIqJ,IAAK,EAC/BL,YAAa,OACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,GAAIC,EAAG,IAAK/I,MAAO,GAAIqJ,IAAK,EAC/BL,YAAa,KACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,EAAD,CAAgBd,EAAG,IAAKC,EAAG,IAAK/I,MAAO,GAAIqJ,IAAK,EAChCL,YAAa,KACbO,QAASrG,KAAKqG,QACdpF,WAAYjB,KAAKiB,WACjByF,gBAAiB1G,KAAK0G,kBAEtC,kBAAC,IAAD,CAAMsB,GAAG,SAASC,EAAE,yVAAyVxB,KAAK,YAElX,kBAAC,IAAD,CAAMb,EAAGsC,GAAerC,EAAGsC,IAAenL,OAAO,IAAIF,MAAM,IAAI2J,KAAK,UAAUF,GAAG,MACjF,kBAAC,IAAD,CAAMX,EAAGsC,GAAerC,EAAGsC,IAAenL,OAAO,IAAIF,MAAM,IAAIwJ,OAAO,UAAUC,GAAG,MAElFsB,O,GA3HgBxH,aAiIjC+H,IAAYC,kBAAkB,OAAO,kBAAM1B,KCxI3C,IAgDetK,EAhDAC,IAAWC,OAAO,CAC7B+L,SAAU,CACN7L,KAAM,EACNQ,cAAe,MAEfN,eAAgB,eAChBiF,WAAY,SACZhE,aAAc,EACdC,cAAe,IAGnB0K,YAAa,CACT9L,KAAM,EACNQ,cAAe,MACfN,eAAgB,eAChBiF,WAAY,UAGhB4G,WAAY,CACR9L,gBAAiB,wBACjBM,OAAQ,MACRS,aAAc,GAGlBgL,mBAAoB,CAChB/L,gBAAiB,uBACjBM,OAAQ,MACRS,aAAc,GAGlBiL,WAAY,CACRtL,MAAO,QACPO,WAAY,gBAGhBgL,UAAW,CACPjM,gBAAiB,QACjBM,OAAQ,MACRS,aAAc,EACdX,MAAO,MACPC,SAAU,GACVJ,eAAgB,SAChBiM,UAAW,SACXC,kBAAmB,EACnBzL,MAAO,4BCzCM0L,E,YACjB,WAAYzJ,GAAQ,6CACVA,I,sDAGA,IAAD,OACCyH,EAAoB9G,KAAKX,MAAzByH,gBACAD,EAAsB7G,KAAKX,MAA3BwH,kBACAhG,EAAsBb,KAAKX,MAA3BwB,kBACA+F,EAAe5G,KAAKX,MAApBuH,WACN,OAAwB,OAApBE,GAA4BD,EAExB,kBAACjI,EAAA,EAAD,CAAMC,MAAOxC,EAAOkM,aAChB,kBAAC,SAAD,CAAQ1J,MAAOxC,EAAOmM,WACdpI,QAAS,kBAAM,EAAKf,MAAM0J,qBAC9B,kBAAC,OAAD,CAAMlK,MAAOxC,EAAOqM,YACA,OAAf9B,GAAuBoC,MAAMpC,GAAc,gBAAkB,cAAgBA,KAMvFC,IAAsBhG,EAEzB,kBAACjC,EAAA,EAAD,CAAMC,MAAOxC,EAAOkM,aAChB,kBAAC,SAAD,CAAQ1J,MAAOxC,EAAOmM,WACdpI,QAAS,kBAAM,EAAKf,MAAM4J,gBAAgB,EAAK5J,MAAMuH,YAAY,KACrE,kBAAC,OAAD,CAAM/H,MAAOxC,EAAOqM,YAApB,cAIJ,kBAAC,SAAD,CAAQ7J,MAAOxC,EAAOoM,mBACdrI,QAAS,kBAAM,EAAKf,MAAM4J,gBAAgB,MAAM,KACpD,kBAAC,OAAD,CAAMpK,MAAOxC,EAAOqM,YAApB,oBAMF,kBAAC9J,EAAA,EAAD,CAAMC,MAAOxC,EAAOkM,kB,GAvCIlI,aCAzB6I,E,mLACjB3J,MAAQ,CACJ4J,WAA2C,OAA/B,EAAK9J,MAAMyH,iB,wDAIjB,IAAD,OACL,OAAI9G,KAAKX,MAAMwH,kBAEP,kBAACjI,EAAA,EAAD,CAAMC,MAAOxC,EAAOiM,UAChB,kBAACxJ,EAAA,EAAD,CAAWD,MAAOxC,EAAOsM,UACb5J,YAAY,SACZE,aAAc,SAAAC,GAAG,OAAI,EAAKG,MAAM4H,aAAamC,SAASlK,KACtDmK,UAAW,EACXC,SAAUtJ,KAAKT,MAAM4J,aAEjC,kBAAC,SAAD,CAAQI,aAAW,EAACC,MAAI,EAAC3K,MAAO,CAAC7B,OAAQ,SACrC,kBAAC,OAAD,CAAM+D,KAAK,WAAWlC,MAAO,CAACzB,MAAO,wBAAyBC,SAAU,QAKpF,kBAACuB,EAAA,EAAD,CAAMC,MAAOxC,EAAOiM,e,GAtBKjI,aCGhBoJ,E,YACjB,WAAYpK,GAAO,IAAD,sBACd,4BAAMA,KAGVE,MAAQ,CACJqH,WAAY,EAAKvH,MAAMyH,gBACvBC,eAAgB,CAAC,EAAG,EAAG,EAAG,IANZ,EASlBE,aAAe,SAACd,GACZ,EAAKzG,SAAS,CACVkH,WAAYT,KAXF,EAelB4C,iBAAmB,WACf,IAAIW,EAAO,EAAKnK,MAAMqH,WACT,OAAT8C,EACA9J,MAAM,2BACD8J,EAAO,GAAKA,GAAQ,KACwB,IAA7C,EAAKnK,MAAMwH,eAAeC,QAAQ0C,GAClC,EAAKrK,MAAM4J,gBAAgB,EAAK1J,MAAMqH,YAAY,GAElDhH,MAAM,wBAvBA,EA4BlB+J,UAAY,WACR,OAAI,EAAKtK,MAAMwH,kBAEP,kBAACjI,EAAA,EAAD,CAAMC,MAAOxC,EAAOiM,UAChB,kBAACxJ,EAAA,EAAD,CAAWD,MAAOxC,EAAOsM,UACb5J,YAAY,SACZE,aAAc,SAAAC,GAAG,OAAI,EAAK+H,aAAamC,SAASlK,KAChDmK,UAAW,IAEvB,kBAAC,SAAD,CAAQE,aAAW,EAACC,MAAI,EAAC3K,MAAO,CAAC7B,OAAQ,SACrC,kBAAC,OAAD,CAAM+D,KAAK,WAAWlC,MAAO,CAACzB,MAAO,wBAAyBC,SAAU,QAKpF,kBAACuB,EAAA,EAAD,CAAMC,MAAOxC,EAAOiM,YA3CV,E,sDAgDd,OACI,kBAAC,YAAD,CAAWzJ,MAAO,CAACpC,KAAM,EAAGC,gBAAiB,6BAOzC,kBAAC,EAAD,CAASoK,gBAAiB9G,KAAKX,MAAMyH,gBAC7BD,kBAAmB7G,KAAKX,MAAMwH,kBAC9BI,aAAcjH,KAAKiH,aACnBpG,kBAAmBb,KAAKX,MAAMwB,oBAEtC,kBAACjC,EAAA,EAAD,CAAMC,MAAO,CAACpC,KAAM,EAAGE,eAAgB,SAAUC,aAAc,WAE3D,kBAAC,EAAD,CAAKkK,gBAAiB9G,KAAKX,MAAMyH,gBAC7BmC,gBAAiBjJ,KAAKX,MAAM4J,gBAC5BhC,aAAcjH,KAAKiH,aACnBF,eAAgB/G,KAAKT,MAAMwH,eAC3BF,kBAAmB7G,KAAKX,MAAMwH,kBAC9BhG,kBAAmBb,KAAKX,MAAMwB,kBAC9B+F,WAAY5G,KAAKT,MAAMqH,cAI/B,kBAAC,EAAD,CAAkBE,gBAAiB9G,KAAKX,MAAMyH,gBAC1BD,kBAAmB7G,KAAKX,MAAMwH,kBAC9BhG,kBAAmBb,KAAKX,MAAMwB,kBAC9B+F,WAAY5G,KAAKT,MAAMqH,WACvBmC,iBAAkB/I,KAAK+I,iBACvBE,gBAAiBjJ,KAAKX,MAAM4J,gBAC5BhC,aAAcjH,KAAKiH,oB,GAhFhB5G,aCJlBuJ,E,YACjB,WAAYvK,GAAO,IAAD,sBACd,4BAAMA,KAGVwK,YAAc,WAuBL,EAAKxK,MAAMyK,QAKZlK,MAAM,6BAJFuC,QAAQ,kBACR,EAAK9C,MAAM0K,WAAU,IA7Bf,E,sDAoCR,IAAD,OACL,OACI,kBAAC,YAAD,CAAWlL,MAAO,CAACpC,KAAM,GAAIC,gBAAiB,6BAC1C,kBAACkC,EAAA,EAAD,CAAMC,MAAO,CAACpC,KAAM,KACpB,kBAACmC,EAAA,EAAD,CAAMC,MAAOxC,EAAO2N,UAEZ,kBAAC,SAAD,CAAQnL,MAAOxC,EAAOqF,QAClB,kBAAC,OAAD,CAAM7C,MAAOxC,EAAO4N,MAApB,iBAEJ,kBAAC,SAAD,CAAQpL,MAAOxC,EAAOqF,QAClB,kBAAC,OAAD,CAAM7C,MAAOxC,EAAO4N,MAApB,2BAEJ,kBAAC,SAAD,CAAQpL,MAAOxC,EAAOqF,QAClB,kBAAC,OAAD,CAAM7C,MAAOxC,EAAO4N,MAApB,aAGJ,kBAAC,SAAD,CAAQpL,MAAOxC,EAAO6N,WACd9J,QAAS,kBAAM,EAAKyJ,gBACxB,kBAAC,OAAD,CAAMhL,MAAOxC,EAAO4N,MAApB,UAIZ,kBAACrL,EAAA,EAAD,CAAMC,MAAO,CAACpC,KAAM,U,GA3DG4D,aAiEjChE,EAASC,IAAWC,OAAO,CAC7ByN,SAAU,CACNvN,KAAM,GACNmF,WAAY,SACZjF,eAAgB,cAGpBsN,KAAM,CACF7M,MAAO,QACPO,WAAY,eACZW,aAAc,GAGlBoD,OAAQ,CACJhF,gBAAiB,wBACjBM,OAAQ,MACRsB,aAAc,KACdxB,MAAO,MACPH,eAAgB,SAChBc,aAAc,EACdV,SAAU,KAKdmN,WAAY,CACRxN,gBAAiB,uBACjBM,OAAQ,MACRF,MAAO,MACPH,eAAgB,SAChBc,aAAc,IACdV,SAAU,OC1DHoN,EAxCM7N,IAAWC,OAAO,CACnC6N,OAAQ,CACJ1N,gBAAiB,yBACjBM,OAAQ,MACRqN,UAAW,GACXpN,cAAe,MACfN,eAAgB,gBAChBiF,WAAY,UAKhB0I,KAAM,CACF3N,eAAgB,SAChBiF,WAAY,SACZ2I,WAAY,KACZjM,aAAc,MAGlBkM,MAAO,CACH7N,eAAgB,SAChBiF,WAAY,SACZtD,aAAc,KACdmM,YAAa,MAGjBC,KAAM,CACF9I,WAAY,SACZtD,aAAc,KACdmM,YAAa,KACbF,WAAY,MAGhBN,KAAM,CACF7M,MAAO,QACPO,WAAY,eACZN,SAAU,MCjCGsN,E,YACjB,WAAYtL,GAAQ,IAAD,sBACf,4BAAMA,KAGVuL,iBAAmB,WAAO,IACf9D,EAAmB,EAAKzH,MAAxByH,gBACP,OAAwB,OAApBA,EACO,aACCA,EAAgBvF,YARb,EAWnBsJ,SAAW,SAACf,GACR,GAAIA,EACA,OACI,kBAAClL,EAAA,EAAD,CAAMC,MAAOsL,EAAaG,MACtB,kBAAC,OAAD,CAAMzL,MAAO,CAACzB,MAAO,SAAU2D,KAAK,UACpC,kBAAC,OAAD,CAAMlC,MAAOsL,EAAaF,MACrB,EAAK5K,MAAMyL,aAjBb,E,sDAwBT,IACCtL,EAASQ,KAAKX,MAAdG,MACP,OACI,kBAACZ,EAAA,EAAD,CAAMC,MAAOsL,EAAaC,QACtB,kBAACxL,EAAA,EAAD,CAAMC,MAAOsL,EAAaG,MACtB,kBAAC,OAAD,CAAMzL,MAAO,CAACzB,MAAO,SAAU2D,KAAK,OACpC,kBAAC,OAAD,CAAMlC,MAAOsL,EAAaF,MACrBjK,KAAK4K,qBAIb5K,KAAK6K,SAAS7K,KAAKX,MAAMyK,SAE1B,kBAAClL,EAAA,EAAD,CAAMC,MAAOsL,EAAaK,OACtB,kBAAC,OAAD,CAAM3L,MAAO,CAAEzB,MAAO,SAAU2D,KAAK,YACrC,kBAAC,OAAD,CAAMlC,MAAO,CAAEsL,EAAaF,OACvBzK,EAAM+B,WAAW4D,OAAS,GAAK3F,EAAQA,EAAMuL,OAAO,EAAG,IAAM,a,GAzC9C1K,aCmCzB2K,EAtCK1O,IAAWC,OAAO,CAClCyN,SAAU,CACNvN,KAAM,EACNC,gBAAiB,QAGrBuO,MAAO,CACHtO,eAAgB,SAChBiF,WAAY,UAGhBG,YAAa,CACTmJ,kBAAmB,QACnBC,kBAAmB,EACnBC,cAAe,MAGnBC,UAAW,CACPjO,MAAO,QACPC,SAAU,GACVM,WAAY,gBAGhBmE,cAAe,CACXnE,WAAY,gBAGhB2N,YAAa,CACT5O,gBAAiB,uBACjBM,OAAQ,OAGZuO,eAAgB,CACZ7O,gBAAiB,wBACjBM,OAAQ,SCzBKwO,G,YCLjB,WAAYnM,GAAQ,6CACVA,I,+CAGA,IAAD,OACGyL,EAAc9K,KAAKX,MAAnByL,UACR,OACI,kBAAC,YAAD,CAAWjM,MAAOmM,EAAYhB,UAC1B,kBAACpL,EAAA,EAAD,CAAMC,MAAO,CAAE,CAACpC,KAAM,GAAIuO,EAAYC,QAClC,kBAAC,SAAD,CAAQzI,MAAI,EAACC,UAAQ,EAAC5D,MAAOmM,EAAYO,gBAErC,kBAAC,OAAD,CAAM1M,MAAOmM,EAAYlJ,eAAzB,eAIR,kBAAClD,EAAA,EAAD,CAAMC,MAAO,CAAE,CAACpC,KAAM,GAAIuO,EAAYC,QAClC,kBAACrM,EAAA,EAAD,CAAMC,MAAOmM,EAAYjJ,aACrB,kBAAC,OAAD,CAAMlD,MAAOmM,EAAYK,WACnBrL,KAAKX,MAAMoM,WAAWX,MAKpC,kBAAClM,EAAA,EAAD,CAAMC,MAAO,CAAE,CAACpC,KAAM,GAAIuO,EAAYC,QAClC,kBAAC,SAAD,CAAQpM,MAAOmM,EAAYM,YACnBlH,UAAW,kBAAM,EAAK/E,MAAM+C,uBAChC,kBAAC,OAAD,CAAMvD,MAAOmM,EAAYlJ,eAAzB,0B,CA3BezB,a,YDOnC,WAAYhB,GAAQ,IAAD,sBACf,4BAAMA,KAeVsB,aAAe,SAAAqD,GACX,EAAKtE,SAAS,CACVgM,OAAQ1H,KAlBG,EAsBnBiF,gBAAkB,SAAC9C,EAAKwF,GACR,OAARxF,EACA,EAAKzG,SAAS,CACVoH,gBAAiBX,IAGrB,EAAKzG,SAAS,CACVoH,gBAAiB,KACjBjG,mBAAmB,IAGvB8K,GAAY,EAAKC,cAjCN,EAoCnBA,WAAa,WACT,EAAKlM,SAAS,CACVmB,mBAAmB,EACnB6K,OAAQ,YACR5B,SAAS,EACTgB,UAAW,EAAKvL,MAAMuL,UACtBe,WAAYC,KAAKC,MAAQ,EAAKxM,MAAMuL,YAExC,EAAKkB,MAAQC,aAAY,WACrB,EAAKvM,SAAS,CACVoL,UAAWgB,KAAKC,MAAQ,EAAKxM,MAAMsM,eAExC,MAhDY,EAmDnBzJ,mBAAqB,WACjBxC,MAAO,eAAiB,EAAK6L,WAAW,EAAKlM,MAAMuL,YACnD,EAAKpL,SAAS,CACVoK,SAAS,EACT+B,WAAY,EACZf,UAAW,IAEfoB,cAAc,EAAKF,OAEnB,EAAK/C,gBAAgB,MACrB,EAAK5G,mBAAkB,IA7DR,EAgEnBoJ,WAAa,SAAAU,GACT,IAAIC,GAAW,IAAOC,KAAKC,MAAMH,EAAK,KAAQ,IAAKI,OAAO,GACtDC,GAAW,IAAOH,KAAKC,MAAMH,EAAK,KAAS,IAAKI,OAAO,GAE3D,OADa,IAAMF,KAAKC,MAAMH,EAAK,OAAUI,OAAO,GACtChL,WAAa,MAAQiL,EAAQjL,WAAa,MAAQ6K,EAAQ7K,YApEzD,EAuEnBc,kBAAoB,SAAAoK,GACZA,EACA,EAAK/M,SAAS,CACVmH,mBAAmB,EACnB6E,OAAQ,QAGZ,EAAKhM,SAAS,CACVmH,mBAAmB,KA/EZ,EAoFnBvF,mBAAqB,SAAAJ,GACjB,IAAIwL,EAAQ,EAAKnN,MAAMgD,iBAClBmK,EAAMxL,GAEJwL,EAAMxL,IAAS,EADlBwL,EAAMxL,IAAS,EAEnB,EAAKxB,SAAS,CACV6C,iBAAkBmK,KA1FP,EA8FnBC,cAAgB,WACZ,MAA0B,cAAtB,EAAKpN,MAAMmM,OAMJ,kBAAC,EAAD,CAAqBrJ,kBAAmB,EAAKA,kBACxBE,iBAAkB,EAAKhD,MAAMgD,iBAC7BjB,mBAAoB,EAAKA,mBACzBT,kBAAmB,EAAKtB,MAAMsB,kBAC9BuB,mBAAoB,EAAKA,qBACxB,QAAtB,EAAK7C,MAAMmM,OACX,kBAAC,EAAD,CAAW5E,gBAAiB,EAAKvH,MAAMuH,gBAC1BmC,gBAAiB,EAAKA,gBACtBpC,kBAAmB,EAAKtH,MAAMsH,kBAC9BhG,kBAAmB,EAAKtB,MAAMsB,oBACrB,aAAtB,EAAKtB,MAAMmM,OACX,kBAAC,EAAD,CAAU3B,UAAW,EAAK1K,MAAM0K,UAAWD,QAAS,EAAKvK,MAAMuK,eADnE,GA5GP,EAAKvK,MAAQ,CACTmM,OAAQ,YACR5E,gBAAiB,KACjBjG,mBAAmB,EACnBgG,mBAAmB,EACnBtE,iBAAkB,EAAC,GAAO,GAAO,GAAO,GAExCuH,SAAS,EACT+B,WAAY,EACZf,UAAW,GAZA,E,sDAqHf,OACI,kBAAC,YAAD,KAKI,kBAAC,EAAD,CAAYtL,MAAOQ,KAAKX,MAAMG,MAAOsH,gBAAiB9G,KAAKT,MAAMuH,gBACrDgD,QAAS9J,KAAKT,MAAMuK,QAASgB,UAAW9K,KAAKyL,WAAWzL,KAAKT,MAAMuL,aAE9E9K,KAAK2M,gBAEN,kBAAC,EAAD,CAAYhM,aAAcX,KAAKW,aACnBF,aAAcT,KAAKT,MAAMmM,OACzB7K,kBAAmBb,KAAKT,MAAMsB,yB,GAnIrBR,c,GAyItB/D,IAAWC,OAAO,CAC7B6N,OAAQ,CACJ1N,gBAAiB,QACjBkF,WAAY,UAGhBgL,MAAO,CACHxP,MAAO,yBACPT,eAAgB,WAChBgB,WAAY,kB,6CEvJCkP,E,mLACjBtN,MAAQ,CACJuN,WAAY,EACZtN,MAAO,GACPuN,YAAY,EACZC,MAAO,M,EAYXjN,UAAY,SAAC0M,EAAMQ,EAAWC,GACtBT,GAkCA,EAAK/M,SAAS,CACVoN,WAAY,EACZtN,MAAOyN,K,EAKnBlD,UAAY,SAAA0C,GACJA,GACA,EAAK/M,SAAS,CACVC,aAAa,EACbH,MAAO,GACPsN,WAAY,K,+JAvDdK,IAAe,CACnB,eAAgBC,EAAQ,KACxB,cAAiBA,EAAQ,Q,OAG3BpN,KAAKN,SAAS,CAAEqN,YAAY,I,gFAyD5B,OAAI/M,KAAKT,MAAMwN,WACmB,IAA1B/M,KAAKT,MAAMuN,WACR,kBAAC,EAAD,CAAStN,MAAOQ,KAAKT,MAAMC,MAAOuK,UAAW/J,KAAK+J,YAC3C,kBAAC,EAAD,CAAYhK,UAAWC,KAAKD,YAChC,S,GA3EWM,c,+DCJ7B,kBAAmBgN,WACrB3B,OAAO4B,iBAAiB,QAAQ,WAC9BD,UAAUE,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,oBCV1DE,EAAOC,QAAU,IAA0B,4B,oBCA3CD,EAAOC,QAAU,IAA0B,8B","file":"static/js/app.01ddf40f.chunk.js","sourcesContent":["import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 3,\r\n        backgroundColor: 'rgba(10, 61, 179, 1.0)',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n    },\r\n    \r\n    signWindow: {\r\n        width: '80%',\r\n        maxWidth: 300,\r\n        height: 'auto',\r\n        flexDirection: 'column',\r\n        alignSelf: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n      \r\n    appName: {\r\n        alignSelf: 'center',\r\n        color: 'white',\r\n        fontSize: 35,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        borderRadius: 5,\r\n        padding: 20,\r\n        fontFamily: 'roboto-light',\r\n        shadowRadius: 5,\r\n        shadowOpacity: 1\r\n    },\r\n    \r\n    authText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        alignSelf: 'center',\r\n        marginVertical: 20,\r\n        fontFamily: 'roboto-light',\r\n        textShadowRadius: 5,\r\n        textShadowColor: 'black'\r\n        // shadowRadius: 3,\r\n        // shadowOpacity: 1\r\n    },\r\n    \r\n    form: {\r\n        height: '30%',\r\n        color: 'rgba(0,0,0,0.3)',\r\n        flexDirection: 'column',\r\n        justifyContent: \"space-between\",\r\n    },\r\n  \r\n    field: {\r\n        paddingLeft: 20,\r\n        minHeight: 50,\r\n        height: '40%',\r\n        backgroundColor: 'white',\r\n        borderRadius: 5,\r\n        shadowRadius: 10,\r\n        shadowOpacity: 0.5,\r\n        fontFamily: 'roboto-light',\r\n        fontSize: 15,\r\n        marginBottom: 10,\r\n        \r\n    },\r\n    \r\n    signInBtn: {\r\n        marginTop: 15,\r\n        alignSelf: 'center',\r\n        backgroundColor: 'rgba(229, 38, 37, 1)',\r\n        justifyContent: 'center',\r\n        minHeight: 50,\r\n        height: '12%',\r\n        width: '35%',\r\n        borderRadius: 100,\r\n        shadowRadius: 10,\r\n        shadowOpacity: 0.5,\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { View, TextInput } from 'react-native';\r\nimport styles from './styles'\r\n\r\nconst Form = ({loginInput, passwordInput}) => (\r\n    <View style={styles.form}>\r\n        <TextInput style={styles.field}\r\n            placeholder={'login'} \r\n            textContentType={\"username\"}\r\n            onChangeText={val => loginInput(val)}\r\n        />\r\n        <TextInput style={styles.field}\r\n            placeholder={'password'}\r\n            textContentType={'password'}\r\n            onChangeText={val => passwordInput(val)}\r\n            secureTextEntry={true}\r\n        />\r\n    </View>\r\n)\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport { View, KeyboardAvoidingView } from 'react-native';\r\nimport { Text, Button } from 'native-base'\r\nimport styles from './styles'\r\nimport Form from './Form'\r\n\r\nexport default class AuthWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\",\r\n            correctData: false\r\n        };\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        // с проверкой\r\n        if (this.state.login && this.state.password) {\r\n            this.setState({ correctData: true })\r\n            return true\r\n        } else {\r\n            alert('wrong login or password')\r\n            return false\r\n        }\r\n\r\n        // без проверки на пустоту \r\n        // this.setState({ correctData: true })\r\n        // return true\r\n    }\r\n\r\n    setLogin = val => {\r\n        this.setState({ login: val })\r\n    }\r\n\r\n    setPassword = val => {\r\n        this.setState({ password: val })\r\n    }\r\n\r\n    render() {\r\n        var checkData = this.props.checkData\r\n        return (\r\n            <KeyboardAvoidingView style={styles.container} behavior=\"padding\" enabled>\r\n                <View style={styles.signWindow}>\r\n                    <Text style={styles.appName}>App name</Text>\r\n                    <Text style={styles.authText}>Authorization</Text>\r\n                    <Form \r\n                        loginInput={this.setLogin}\r\n                        passwordInput={this.setPassword}\r\n                    />\r\n                    <Button style={styles.signInBtn}\r\n                            onPress={() =>  checkData(this.handleButtonClick(), this.state.login, this.state.password) }\r\n                    >\r\n                        <Text style={{color: 'white', fontFamily: 'roboto-light'}}>Sign in</Text>\r\n                    </Button>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport { Footer, FooterTab, Button, Icon, Text} from 'native-base'\r\n\r\nexport default class FooterMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setColor = (buttonName) => {\r\n        var state = this.props.currentState\r\n        if (state === buttonName)\r\n            return ({color: 'rgba(39, 171, 227, 1)'})\r\n        else return ({color: 'rgba(10, 61, 179, 1.0)'})\r\n    }\r\n\r\n    textStyle = (buttonName) => {\r\n        return ([ {fontSize: 12, fontFamily: 'roboto-light'}, this.setColor(buttonName) ])\r\n    }\r\n\r\n    render() {\r\n        var changeWindow = this.props.changeWindow\r\n        let firstButtonText = this.props.isWorkspaceChosen ? 'Time' : 'Parameters'\r\n        return(\r\n            <Footer>\r\n                <FooterTab style={{backgroundColor: 'white', shadowRadius: 1, shadowOpacity: 0.1}}>\r\n\r\n                    <Button vertical onPress={() => changeWindow('workspace')}>\r\n                        <Icon name='tv' style={this.setColor('workspace')} />\r\n                        <Text style={this.textStyle('workspace')} >\r\n                            {firstButtonText}\r\n                        </Text>\r\n                    </Button>\r\n\r\n                    <Button vertical onPress={() => changeWindow('map')}>\r\n                        <Icon name='pin' style={this.setColor('map')} />\r\n                        <Text style={this.textStyle('map')} >\r\n                            Map\r\n                        </Text>\r\n                    </Button>\r\n\r\n                    <Button vertical onPress={() => changeWindow('settings')}>\r\n                        <Icon name='settings' style={this.setColor('settings')} />\r\n                        <Text style={this.textStyle('settings')} >\r\n                            Settings\r\n                        </Text>\r\n                    </Button>\r\n\r\n                </FooterTab>\r\n            </Footer>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport {View, TouchableHighlight, StyleSheet} from 'react-native'\r\nimport {Icon, Text} from 'native-base'\r\n\r\nexport default class ParameterButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setOpacity = index => {\r\n        return this.props.chosenParams[index] ? 1 : 0.5\r\n    }\r\n\r\n    setColor = index => {\r\n        return this.props.chosenParams[index] ? 'rgba(10, 61, 179, 1.0)' : 'rgb(166, 202, 240)'\r\n    }\r\n\r\n    setIcon = index => {\r\n        return this.props.chosenParams[index] ? 'add-circle' : 'remove-circle-outline'\r\n    }\r\n\r\n    buttonPressed = index => {\r\n        if (!this.props.isWorkspaceChosen) {\r\n            this.props.changeChosenParams(index)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        name = this.props.name.toString()\r\n        const {index} = this.props\r\n        return(\r\n            <TouchableHighlight onPress={() => this.buttonPressed(index)} \r\n                                underlayColor='transparent'\r\n                                style={{height: '20%', width: '60%', maxWidth: 250}}>\r\n                {/* <View style={[styles.button, {opacity: this.setOpacity(index)}]}> */}\r\n                <View style={[styles.button, {backgroundColor: this.setColor(index)}]}>\r\n                    <Icon style={{color: 'white', fontSize: 30}} name={this.setIcon(index)} />\r\n                    <Text style={{color: 'white', fontSize: 12, fontFamily: 'roboto-light'}}>\r\n                        {name}\r\n                    </Text>\r\n                </View>\r\n            </TouchableHighlight>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        height: '20%', \r\n        width: '60%', \r\n        maxWidth: 250\r\n    },\r\n\r\n    button: {\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgb(10, 61, 179)',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 8,\r\n        height: '100%',\r\n        // width: '40%',\r\n        // aspectRatio: 1/1,\r\n        // margin: 10\r\n    }\r\n})","import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    edgeBlock: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    edgeBlockText: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    centerBlock: {\r\n        // backgroundColor: 'green',\r\n        flex: 5,\r\n        width: '80%',\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        // backgroundColor: 'yellow'\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)', \r\n        height: '75%', \r\n        borderRadius: 8, \r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        maxWidth: 300\r\n    }\r\n})\r\n\r\nexport default styles","import React, {Component} from 'react'\r\nimport {Button, Text} from 'native-base'\r\nimport styles from './ParametersStyles'\r\nimport {Alert} from 'react-native'\r\n\r\nexport default class BottomButtom extends Component {\r\n    leaveConfirm = () => {\r\n        //for App\r\n        //\r\n        // Alert.alert(\r\n        //     'Are you sure?',\r\n        //     '',\r\n        //     [\r\n        //         {text: 'Yes', onPress: () => this.props.leaveButtonPressed()},\r\n        //         {\r\n        //             text: 'No',\r\n        //             style: 'cancel'\r\n        //         },\r\n        //     ],\r\n        //     {cancelable: true},\r\n        // );\r\n\r\n        // for web\r\n        //\r\n        if (confirm('Are you sure?')) {\r\n            this.props.leaveButtonPressed()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var {isWorkspaceChosen} = this.props\r\n        if (!isWorkspaceChosen) {\r\n            return(\r\n                <Button style={styles.button}\r\n                        onPress={() => this.props.setParamsSelected(true)}>\r\n                    <Text style={styles.edgeBlockText}>Select workspace</Text>\r\n                </Button>\r\n            )\r\n        } else {\r\n            return(\r\n                <Button style={styles.button}\r\n                        onPress={() => this.leaveConfirm()}>\r\n                    <Text style={styles.edgeBlockText}>Leave workspace</Text>\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {View, StyleSheet} from 'react-native'\r\nimport {Button, Text, Container} from 'native-base'\r\nimport ParameterButton from './ParameterButton'\r\nimport styles from './ParametersStyles'\r\nimport BottomButton from './BottomButton'\r\n\r\nexport default class WorkspaceParameters extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        var { chosenParameters } = this.props\r\n        var { changeChosenParams } = this.props\r\n        var { isWorkspaceChosen } = this.props\r\n        return(\r\n            <Container style={{flex: 7, backgroundColor: 'rgba(211, 211, 211, 0.4)'}}>\r\n                <View style={styles.edgeBlock}>\r\n                    <Button full disabled style={{backgroundColor: 'rgba(39, 171, 227, 1)', height: '75%'}}>\r\n                        <Text style={styles.edgeBlockText}>\r\n                            {isWorkspaceChosen ? 'Chosen parameters' : 'Choose parameters'}\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n\r\n                <View style={styles.centerBlock}>\r\n                    <ParameterButton name='Parameter #1' index={0} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/>\r\n                    <ParameterButton name='Parameter #2' index={1} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/>\r\n                    <ParameterButton name='Parameter #3' index={2} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/> \r\n                    <ParameterButton name='Parameter #4' index={3} chosenParams={chosenParameters}\r\n                                        changeChosenParams={changeChosenParams}\r\n                                        isWorkspaceChosen={isWorkspaceChosen}/> \r\n                </View>\r\n\r\n                <View style={styles.edgeBlock}>\r\n                    <BottomButton isWorkspaceChosen={isWorkspaceChosen}\r\n                                    setParamsSelected={this.props.setParamsSelected}\r\n                                    leaveButtonPressed={this.props.leaveButtonPressed} />\r\n                </View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\n//     edgeBlock: {\r\n//         flex: 1,\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center'\r\n//     },\r\n\r\n//     edgeBlockText: {\r\n//         color: 'white',\r\n//         fontFamily: 'roboto-light'\r\n//     },\r\n\r\n//     centerBlock: {\r\n//         // backgroundColor: 'green',\r\n//         flex: 5,\r\n//         width: '80%',\r\n//         alignSelf: 'center',\r\n//         alignItems: 'baseline',\r\n//         flexDirection: 'row',\r\n//         alignContent: 'space-around',\r\n//         justifyContent: 'space-around',\r\n//         flexWrap: 'wrap'\r\n//     }\r\n\r\n// })","import React, { Component } from 'react';\r\nimport { Animated, Easing } from 'react-native';\r\nimport { G } from 'react-native-svg';\r\n\r\nconst AnimatedG = Animated.createAnimatedComponent(G);\r\n\r\nfunction flattenStyle(style) {\r\n    if (style === null || typeof style !== 'object') {\r\n        return undefined;\r\n    }\r\n\r\n    if (!Array.isArray(style)) {\r\n        return style;\r\n    }\r\n\r\n    const result = {};\r\n    for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\r\n        const computedStyle = flattenStyle(style[i]);\r\n        if (computedStyle) {\r\n            for (const key in computedStyle) {\r\n                result[key] = computedStyle[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * A wrapper for making svg elements respond properly to touches.\r\n * On press down, the opacity of the wrapped element is decreased, dimming it.\r\n *\r\n * Opacity is controlled by wrapping the children in an Animated.G, which is\r\n * added to the view hierarchy.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * renderRect: function() {\r\n *   return (\r\n *     <TouchableOpacityG\r\n *       onPress={e => {\r\n *         console.log('press', e);\r\n *       }}>\r\n *       <Rect x=\"0\" y=\"50\" width=\"100\" height=\"50\" fill=\"blue\" />\r\n *     </TouchableOpacityG>\r\n *   );\r\n * },\r\n * ```\r\n * ### Example\r\n *\r\n * ```ReactNativeWebPlayer\r\n * import React from \"react\";\r\n * import {\r\n *   AppRegistry,\r\n * } from 'react-native'\r\n * import Svg, {\r\n *     Rect,\r\n * } from \"react-native-svg\";\r\n *\r\n * import TouchableOpacityG from './TouchableOpacityG';\r\n *\r\n * const App = () => (\r\n *     <Svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\">\r\n *         <Rect\r\n *             x=\"0\"\r\n *             y=\"0\"\r\n *             width=\"100\"\r\n *             height=\"50\"\r\n *             fill=\"red\"\r\n *             onPress={e => {\r\n *                 console.log('press1', e);\r\n *             }}\r\n *         />\r\n *         <TouchableOpacityG\r\n *             onPress={e => {\r\n *                 console.log('press2', e);\r\n *             }}>\r\n *             <Rect x=\"0\" y=\"50\" width=\"100\" height=\"50\" fill=\"blue\" />\r\n *         </TouchableOpacityG>\r\n *     </Svg>\r\n * );\r\n *\r\n * AppRegistry.registerComponent('App', () => App)\r\n * ```\r\n *\r\n */\r\nexport default class TouchableOpacityG extends Component {\r\n    static defaultProps = {\r\n        activeOpacity: 0.2,\r\n    };\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.props.disabled !== prevProps.disabled) {\r\n            this._opacityInactive(250);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Animate the touchable to a new opacity.\r\n     */\r\n    setOpacityTo = (value, duration) => {\r\n        Animated.timing(this.state.anim, {\r\n            toValue: value,\r\n            duration: duration,\r\n            easing: Easing.inOut(Easing.quad),\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    touchableHandleActivePressIn = e => {\r\n        if (e.dispatchConfig.registrationName === 'onResponderGrant') {\r\n            this._opacityActive(0);\r\n        } else {\r\n            this._opacityActive(150);\r\n        }\r\n        this.props.onPressIn && this.props.onPressIn(e);\r\n    };\r\n\r\n    touchableHandleActivePressOut = e => {\r\n        this._opacityInactive(250);\r\n        this.props.onPressOut && this.props.onPressOut(e);\r\n    };\r\n\r\n    touchableHandlePress = e => {\r\n        this.props.onPress && this.props.onPress(e);\r\n    };\r\n\r\n    touchableHandleLongPress = e => {\r\n        this.props.onLongPress && this.props.onLongPress(e);\r\n    };\r\n\r\n    _opacityActive = duration => {\r\n        this.setOpacityTo(this.props.activeOpacity, duration);\r\n    };\r\n\r\n    _opacityInactive = duration => {\r\n        this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\r\n    };\r\n\r\n    _getChildStyleOpacityWithDefault = () => {\r\n        const childStyle = flattenStyle(this.props.style) || {};\r\n        return childStyle.opacity == null ? 1 : childStyle.opacity;\r\n    };\r\n\r\n    state = {\r\n        anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AnimatedG\r\n                opacity={this.state.anim}\r\n                onPress={this.touchableHandlePress}\r\n                onLongPress={this.touchableHandleLongPress}\r\n                onPressIn={this.touchableHandleActivePressIn}\r\n                onPressOut={this.touchableHandleActivePressOut}\r\n            >\r\n                {this.props.children}\r\n            </AnimatedG>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Svg, {\r\n    Text,\r\n    Rect,\r\n  } from 'react-native-svg';\r\nimport TouchableOpacityG from './TouchableOpacityG'\r\n\r\n\r\nexport default class WorkplaceOnMap extends Component {\r\n\r\n    setCoords = (x, y, width, orientation) => {\r\n        let x_text = 0\r\n        let y_text = 0\r\n        let x_circle = 0\r\n        let y_circle = 0\r\n        if (orientation == 'down') {\r\n            x_text = x + 0.425 * width\r\n            y_text = y + 0.375 * width\r\n            x_circle = x + 0.375 * width\r\n            y_circle = y + 0.625 * width\r\n        } else if (orientation == 'right') {\r\n            x_text = x + 0.25 * width\r\n            y_text = y + 0.575 * width\r\n            x_circle = x + 0.625 * width\r\n            y_circle = y + 0.375 * width\r\n        } else if (orientation == 'up') {\r\n            x_text = x + 0.425 * width\r\n            y_text = y + 0.8 * width\r\n            x_circle = x + 0.375 * width\r\n            y_circle = y + 0.125 * width\r\n        } else if (orientation == 'left') {\r\n            x_text = x + 0.625 * width\r\n            y_text = y + 0.575 * width\r\n            x_circle = x + 0.125 * width\r\n            y_circle = y + 0.375 * width\r\n        }\r\n\r\n        return [x_text, y_text, x_circle, y_circle]\r\n    }\r\n\r\n    render() {\r\n        const { x } = this.props\r\n        const { y } = this.props\r\n        const { width } = this.props\r\n        const { orientation } = this.props\r\n        const { num } = this.props\r\n        const coords = this.setCoords(x, y, width, orientation)\r\n        \r\n        return(\r\n            <TouchableOpacityG onPress={() => this.props.setSeat(num)}>                             \r\n                <Rect \r\n                    x={x} y={y} \r\n                    width={width} \r\n                    height={width} \r\n                    stroke=\"#0a3db3\" \r\n                    rx='3' \r\n                    opacity={this.props.setOpacity(num)}/>\r\n                <Text \r\n                    x={coords[0]} \r\n                    y={coords[1]} \r\n                    fontSize='10' \r\n                    fontWeight='bold'\r\n                    // fontFamily='roboto-light' \r\n                    fill='#27ABE3'\r\n                    >\r\n                    {num}\r\n                </Text>\r\n                <Rect \r\n                    x={coords[2]} \r\n                    y={coords[3]} \r\n                    width={width / 4} \r\n                    height={width / 4} \r\n                    fill={this.props.setStatusCircle(num)} \r\n                    rx={width / 8} />\r\n            </TouchableOpacityG>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Svg, {\r\n    Rect,\r\n    Path,\r\n    Line\r\n  } from 'react-native-svg';\r\nimport WorkplaceOnMap from './WorkplaceOnMap'\r\nimport { AppRegistry } from 'react-native'\r\n\r\nexport default class Map extends Component {\r\n\r\n    setOpacity = num => {\r\n        if (num === this.props.seatNumber || this.props.seatNumber === null)\r\n            return '1'\r\n        else return '0.4'\r\n    }\r\n\r\n    setSeat = num => {\r\n        if (this.props.areParamsSelected && this.props.workspaceNumber === null) {\r\n            if (this.props.avialableSeats.indexOf(num) !== -1) {\r\n                this.props.setLocalSeat(num)\r\n            }\r\n            else alert('You cannot choose it!')\r\n        }\r\n    }\r\n\r\n    setStatusCircle = num => {\r\n        if (!this.props.areParamsSelected) \r\n            return '#0a3db3'\r\n        else if (this.props.avialableSeats.indexOf(num) === -1)\r\n            return 'red'\r\n        else return '#25E5B7'\r\n    }\r\n\r\n    * generator(num) {\r\n        let coordsX =[]\r\n        let coordsY = []\r\n        if (num === 1 || num === 3) {\r\n            coordsY = [170, 135, 135, 65, 65, 55]\r\n            coordsX = num === 1 ? [30, 30, 75, 75, 30, 30] : [30, 30, 75, 75, 170, 170]\r\n        } else if (num === 5) {\r\n            coordsX = [30, 30, 75, 75, 90]\r\n            coordsY = [170, 135, 135, 100, 100]\r\n        } else if (num === 7) {\r\n            coordsX = [30, 30, 100, 100]\r\n            coordsY = [170, 135, 135, 145]\r\n        }\r\n        for (let i = 0; i < coordsX.length - 1; ++i) {\r\n            yield React.createElement(\r\n                Line,\r\n                {\r\n                    key: i,\r\n                    x1: coordsX[i].toString(),\r\n                    y1: coordsY[i].toString(),\r\n                    x2: coordsX[i + 1].toString(),\r\n                    y2: coordsY[i + 1].toString(),\r\n                    stroke: 'red',\r\n                    strokeWidth: '2',\r\n                    strokeLinecap: 'round'\r\n                }\r\n            )\r\n        }      \r\n    }\r\n\r\n    render() { \r\n        let locationX = 50\r\n        let locationY = 150 // буду получать\r\n\r\n        // let coordsX = [30, 30, 75, 75, 170, 170]  // буду получать\r\n        // let coordsY = [170, 135, 135, 65, 65, 55]\r\n        let path = null\r\n        if (this.props.workspaceNumber !== null && !this.props.isWorkspaceChosen) {\r\n            // path = [...this.generator(coordsX, coordsY)]\r\n            path = [...this.generator(this.props.seatNumber)]\r\n        }\r\n\r\n        return(\r\n            <Svg  width='100%' height='100%' viewBox='0 0 200 200' fill=\"none\">\r\n\r\n                <WorkplaceOnMap x={10} y={10} width={40} num={1}\r\n                                orientation={'down'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={80} y={10} width={40} num={2}\r\n                                orientation={'down'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={150} y={10} width={40} num={3}\r\n                                orientation={'down'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={10} y={80} width={40} num={4}\r\n                                orientation={'right'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={100} y={80} width={40} num={5}\r\n                                orientation={'left'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={150} y={80} width={40} num={6}\r\n                                orientation={'down'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={80} y={150} width={40} num={7}\r\n                                orientation={'up'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <WorkplaceOnMap x={150} y={150} width={40} num={8}\r\n                                orientation={'up'}\r\n                                setSeat={this.setSeat}\r\n                                setOpacity={this.setOpacity}\r\n                                setStatusCircle={this.setStatusCircle} />\r\n\r\n                <Path id=\"Arrow1\" d=\"M30.3536 180.646C30.1583 180.451 29.8417 180.451 29.6464 180.646L26.4645 183.828C26.2692 184.024 26.2692 184.34 26.4645 184.536C26.6597 184.731 26.9763 184.731 27.1716 184.536L30 181.707L32.8284 184.536C33.0237 184.731 33.3403 184.731 33.5355 184.536C33.7308 184.34 33.7308 184.024 33.5355 183.828L30.3536 180.646ZM30.5 190V181H29.5V190H30.5Z\" fill=\"#27ABE3\"/>\r\n\r\n                <Rect x={locationX - 5} y={locationY - 5} height='6' width='6' fill='#27ABE3' rx='3' />\r\n                <Rect x={locationX - 6} y={locationY - 6} height='8' width='8' stroke='#27ABE3' rx='4' />\r\n                \r\n                {path}\r\n            </Svg>\r\n        )\r\n    }\r\n}\r\n\r\nAppRegistry.registerComponent('Map', () => Map)\r\n\r\n\r\n","import {StyleSheet} from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    topBlock: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        // justifyContent: 'flex-end',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        shadowRadius: 1,\r\n        shadowOpacity: 0.1\r\n    },\r\n\r\n    bottomBlock: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    takeButton: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)',\r\n        height: '75%',\r\n        borderRadius: 8\r\n    },\r\n\r\n    anotherPlaceButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)',\r\n        height: '75%',\r\n        borderRadius: 8\r\n    },\r\n\r\n    buttonText: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    seatInput: {\r\n        backgroundColor: 'white', \r\n        height: '75%', \r\n        borderRadius: 8, \r\n        width: '20%',\r\n        maxWidth: 50,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        paddingHorizontal: 7,\r\n        color: 'rgba(10, 61, 179, 1.0)',\r\n    }\r\n})\r\n\r\nexport default styles","import React, { Component } from 'react'\r\nimport { View, TextInput } from 'react-native'\r\nimport { Button, Text } from 'native-base'\r\nimport styles from './MapWindowStyles'\r\n\r\nexport default class MapBottomButtons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        let { workspaceNumber } = this.props\r\n        let { areParamsSelected } = this.props\r\n        let { isWorkspaceChosen } = this.props\r\n        let { seatNumber } = this.props\r\n        if (workspaceNumber === null && areParamsSelected) {\r\n            return (\r\n                <View style={styles.bottomBlock}>\r\n                    <Button style={styles.takeButton} \r\n                            onPress={() => this.props.takePlacePressed()}>\r\n                        <Text style={styles.buttonText}>\r\n                            {seatNumber === null || isNaN(seatNumber) ? 'Choose number' : 'Take place ' + seatNumber}\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n\r\n            )\r\n        } else if (areParamsSelected && !isWorkspaceChosen) {\r\n            return (\r\n                <View style={styles.bottomBlock}>\r\n                    <Button style={styles.takeButton}\r\n                            onPress={() => this.props.changeWorkspace(this.props.seatNumber, true)}>\r\n                        <Text style={styles.buttonText}>\r\n                            Switch on\r\n                        </Text>\r\n                    </Button>\r\n                    <Button style={styles.anotherPlaceButton}\r\n                            onPress={() => this.props.changeWorkspace(null, false)}>\r\n                        <Text style={styles.buttonText}>\r\n                            Choose another\r\n                        </Text>\r\n                    </Button>\r\n                </View>\r\n            )\r\n        } else return <View style={styles.bottomBlock}></View>\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport styles from './MapWindowStyles'\r\nimport {View, TextInput} from 'react-native'\r\nimport {Button, Icon, Text} from 'native-base'\r\n\r\nexport default class TopMenu extends Component {\r\n    state = {\r\n        isEditable: this.props.workspaceNumber === null ? true : false\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.areParamsSelected) {\r\n            return (\r\n                <View style={styles.topBlock}>\r\n                    <TextInput style={styles.seatInput}\r\n                                placeholder='№'\r\n                                onChangeText={val => this.props.setLocalSeat(parseInt(val))}\r\n                                maxLength={1}\r\n                                editable={this.state.isEditable}\r\n                                />\r\n                    <Button transparent icon style={{height: '100%'}}>\r\n                        <Icon name='navigate' style={{color: 'rgba(39, 171, 227, 1)', fontSize: 35}} />\r\n                    </Button>\r\n                </View>\r\n            )\r\n        } else return (\r\n            <View style={styles.topBlock}></View>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {View, TextInput} from 'react-native'\r\nimport {Button, Icon, Text, Container} from 'native-base'\r\nimport Map from './Map'\r\nimport styles from './MapWindowStyles'\r\nimport MapBottomButtons from './MapBottomButtons'\r\nimport TopMenu from './TopMenu'\r\n\r\nexport default class MapWindow extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        seatNumber: this.props.workspaceNumber,\r\n        avialableSeats: [1, 3, 5, 7] // буду получать\r\n    }\r\n\r\n    setLocalSeat = (num) => {\r\n        this.setState({\r\n            seatNumber: num\r\n        })\r\n    }\r\n\r\n    takePlacePressed = () => {\r\n        let seat = this.state.seatNumber\r\n        if (seat === null) \r\n            alert(\"Chose workspace please!\")\r\n        else if (seat > 0 && seat <= 8) {\r\n            if (this.state.avialableSeats.indexOf(seat) !== -1) {\r\n                this.props.changeWorkspace(this.state.seatNumber, false)\r\n            } else {\r\n                alert(\"You can't chose it\")\r\n            }\r\n        }\r\n    }\r\n\r\n    showInput = () => {\r\n        if (this.props.areParamsSelected) {\r\n            return (\r\n                <View style={styles.topBlock}>\r\n                    <TextInput style={styles.seatInput}\r\n                                placeholder='№'\r\n                                onChangeText={val => this.setLocalSeat(parseInt(val))}\r\n                                maxLength={1}\r\n                                />\r\n                    <Button transparent icon style={{height: '100%'}}>\r\n                        <Icon name='navigate' style={{color: 'rgba(39, 171, 227, 1)', fontSize: 35}} />\r\n                    </Button>\r\n                </View>\r\n            )\r\n        } else return (\r\n            <View style={styles.topBlock}></View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container style={{flex: 7, backgroundColor: 'rgba(211, 211, 211, 0.4)' }}>\r\n                {/* <View style={styles.topBlock}>\r\n                    <Button transparent icon style={{height: '100%'}}>\r\n                        <Icon name='navigate' style={{color: 'rgba(39, 171, 227, 1)', fontSize: 35}} />\r\n                    </Button>\r\n                </View> */}\r\n                {/* {this.showInput()} */}\r\n                <TopMenu workspaceNumber={this.props.workspaceNumber}\r\n                        areParamsSelected={this.props.areParamsSelected}\r\n                        setLocalSeat={this.setLocalSeat}\r\n                        isWorkspaceChosen={this.props.isWorkspaceChosen} />\r\n\r\n                <View style={{flex: 5, justifyContent: 'center', alignContent: 'center'}}>\r\n\r\n                    <Map workspaceNumber={this.props.workspaceNumber} \r\n                        changeWorkspace={this.props.changeWorkspace}\r\n                        setLocalSeat={this.setLocalSeat}\r\n                        avialableSeats={this.state.avialableSeats}\r\n                        areParamsSelected={this.props.areParamsSelected}\r\n                        isWorkspaceChosen={this.props.isWorkspaceChosen}\r\n                        seatNumber={this.state.seatNumber}/>\r\n        \r\n                </View>\r\n\r\n                <MapBottomButtons workspaceNumber={this.props.workspaceNumber}\r\n                                    areParamsSelected={this.props.areParamsSelected}\r\n                                    isWorkspaceChosen={this.props.isWorkspaceChosen}\r\n                                    seatNumber={this.state.seatNumber}\r\n                                    takePlacePressed={this.takePlacePressed}\r\n                                    changeWorkspace={this.props.changeWorkspace} \r\n                                    setLocalSeat={this.setLocalSeat}/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {View, StyleSheet, Alert } from 'react-native'\r\nimport { Button, Text, Container } from 'native-base'\r\n\r\nexport default class Workspace extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    confirmExit = () => {\r\n        // for app\r\n        //\r\n        // if (!this.props.timerOn) {\r\n        //     Alert.alert(\r\n        //         'Are you sure?',\r\n        //         '',\r\n        //         [\r\n        //             {text: 'Yes', onPress: () => this.props.checkExit(true)},\r\n        //             {\r\n        //                 text: 'No', \r\n        //                 onPress: () => this.props.checkExit(false), \r\n        //                 style: 'cancel'\r\n        //             },\r\n        //         ],\r\n        //         {cancelable: true},\r\n        //     );\r\n        // } else {\r\n        //     alert('You should end your work!')\r\n        // }\r\n\r\n        // for web\r\n        //\r\n        if (!this.props.timerOn) {\r\n            if (confirm('Are you sure?')) {\r\n                this.props.checkExit(true)\r\n            }\r\n        } else {\r\n            alert('You should end your work!')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container style={{flex: 12, backgroundColor: 'rgba(211, 211, 211, 0.4)'}}>\r\n                <View style={{flex: 1}}></View>\r\n                <View style={styles.mainView}>\r\n\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>View history</Text>\r\n                        </Button>\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>Set default parameters</Text>\r\n                        </Button>\r\n                        <Button style={styles.button}>\r\n                            <Text style={styles.text}>Sth else</Text>\r\n                        </Button>\r\n\r\n                        <Button style={styles.exitButton}\r\n                                onPress={() => this.confirmExit()}>\r\n                            <Text style={styles.text}>Exit</Text>\r\n                        </Button>\r\n                  \r\n                </View>\r\n                <View style={{flex: 1}}></View>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainView: {\r\n        flex: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n\r\n    text: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light',\r\n        marginBottom: 0\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)', \r\n        height: '15%',\r\n        marginBottom: '3%',\r\n        width: '70%',\r\n        justifyContent: 'center',\r\n        borderRadius: 8,\r\n        maxWidth: 250\r\n        // alignContent: 'center',\r\n        // textAlignVertical: 'center'\r\n    },\r\n\r\n    exitButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)', \r\n        height: '15%',\r\n        width: '70%',\r\n        justifyContent: 'center',\r\n        borderRadius: 100,\r\n        maxWidth: 250\r\n    }\r\n})","import {StyleSheet} from 'react-native'\r\n\r\nconst headerStyles = StyleSheet.create({\r\n    header: {\r\n        backgroundColor: 'rgba(10, 61, 179, 1.0)',\r\n        height: '15%',\r\n        maxHeight: 80,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        // marginBottom: '2%'\r\n        // shadowRadius: 5\r\n    },\r\n\r\n    left: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: '3%',\r\n        marginBottom: '1%'\r\n    },\r\n\r\n    right: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: '1%',\r\n        marginRight: '3%',\r\n    },\r\n\r\n    elem: {\r\n        alignItems: 'center',\r\n        marginBottom: '5%',\r\n        marginRight: '5%',\r\n        marginLeft: '3%'\r\n    },\r\n\r\n    text: {\r\n        color: 'white',\r\n        fontFamily: 'roboto-light',\r\n        fontSize: 15\r\n    }\r\n})\r\n\r\nexport default headerStyles\r\n","import React, { Component } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Icon, Text } from 'native-base'\r\nimport headerStyles from './HeaderStyles'\r\n\r\nexport default class MainHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    setWorkspaceText = () => {\r\n        const {workspaceNumber} = this.props\r\n        if (workspaceNumber === null) \r\n            return 'Not chosen'\r\n        else return workspaceNumber.toString()\r\n    }\r\n\r\n    setTimer = (timerOn) => {\r\n        if (timerOn) {\r\n            return(\r\n                <View style={headerStyles.left}>\r\n                    <Icon style={{color: 'white'}} name='alarm' />\r\n                    <Text style={headerStyles.text}>\r\n                        {this.props.timerTime}\r\n                    </Text>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {login} = this.props\r\n        return(\r\n            <View style={headerStyles.header}>\r\n                <View style={headerStyles.left}>\r\n                    <Icon style={{color: 'white'}} name='tv' />\r\n                    <Text style={headerStyles.text}>\r\n                        {this.setWorkspaceText()}\r\n                    </Text>\r\n                </View>\r\n\r\n                {this.setTimer(this.props.timerOn)}\r\n\r\n                <View style={headerStyles.right}>\r\n                    <Icon style={{ color: 'white'}} name='contact' />\r\n                    <Text style={[ headerStyles.text]}>\r\n                        {login.toString().length < 15 ? login : login.substr(0, 12) + '...'}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}","import {StyleSheet} from 'react-native'\r\n\r\nconst timerStyles = StyleSheet.create({\r\n    mainView: {\r\n        flex: 7,\r\n        backgroundColor: 'gray',\r\n    },\r\n\r\n    block: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    centerBlock: {\r\n        borderBottomColor: 'white',\r\n        borderBottomWidth: 2,\r\n        paddingBottom: '5%',\r\n    },\r\n\r\n    stopWatch: {\r\n        color: 'white',\r\n        fontSize: 40,\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    edgeBlockText: {\r\n        fontFamily: 'roboto-light'\r\n    },\r\n\r\n    leaveButton: {\r\n        backgroundColor: 'rgba(229, 38, 37, 1)', \r\n        height: '75%'\r\n    },\r\n\r\n    yourTimeButton: {\r\n        backgroundColor: 'rgba(39, 171, 227, 1)', \r\n        height: '75%'\r\n    }\r\n})\r\n\r\nexport default timerStyles","import React, {Component} from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport FooterMenu from './FooterMenu'\r\nimport { Container, Title , Header } from 'native-base';\r\nimport WorkspaceParameters from './ParamsWindow/WorkspaceParameters'\r\nimport MapWindow from './MapComponents/MapWindow'\r\nimport Settings from './Settings'\r\nimport MainHeader from './Header/MainHeader';\r\nimport SeatTimer from './Timer/SeatTimer'\r\n\r\n\r\nexport default class MainApp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            window: 'workspace',\r\n            workspaceNumber: null,\r\n            isWorkspaceChosen: false,\r\n            areParamsSelected: false,\r\n            chosenParameters: [false, false, false, false],\r\n\r\n            timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0,\r\n        }\r\n    }\r\n\r\n    changeWindow = e => {\r\n        this.setState({\r\n            window: e,\r\n        })\r\n    }\r\n\r\n    changeWorkspace = (num, switchFlag) => {\r\n        if (num !== null) {\r\n            this.setState({\r\n                workspaceNumber: num,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                workspaceNumber: null,\r\n                isWorkspaceChosen: false,\r\n            })\r\n        }\r\n        if (switchFlag) this.startTimer()\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({\r\n            isWorkspaceChosen: true,\r\n            window: 'workspace',\r\n            timerOn: true,\r\n            timerTime: this.state.timerTime,\r\n            timerStart: Date.now() - this.state.timerTime\r\n        })\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                timerTime: Date.now() - this.state.timerStart\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    leaveButtonPressed = () => {\r\n        alert( \"Your time:\\n\" + this.formatTime(this.state.timerTime))\r\n        this.setState({ \r\n            timerOn: false,\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n        clearInterval(this.timer);\r\n\r\n        this.changeWorkspace(null)\r\n        this.setParamsSelected(false)\r\n    }\r\n\r\n    formatTime = ms => {\r\n        let seconds = (\"0\" + (Math.floor(ms / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(ms / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(ms / 3600000)).slice(-2);\r\n        return (hours.toString() + \" : \" + minutes.toString() + \" : \" + seconds.toString())\r\n    }\r\n\r\n    setParamsSelected = flag => {\r\n        if (flag) {\r\n            this.setState({\r\n                areParamsSelected: true,\r\n                window: 'map'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                areParamsSelected: false\r\n            })\r\n        }\r\n    }\r\n\r\n    changeChosenParams = index => {\r\n        var array = this.state.chosenParameters\r\n        if (!array[index]) {\r\n            array[index] = true\r\n        } else array[index] = false\r\n        this.setState({\r\n            chosenParameters: array\r\n        })\r\n    }\r\n\r\n    setMainWindow = () => {\r\n        if (this.state.window === 'workspace') {\r\n            // if (this.state.isWorkspaceChosen) \r\n            //     return <SeatTimer leaveButtonPressed={this.leaveButtonPressed}\r\n            //                         timerTime={this.state.timerTime}\r\n            //                         formatTime={this.formatTime}/>\r\n            // else return <WorkspaceParameters setParamsSelected={this.setParamsSelected}/>\r\n            return <WorkspaceParameters setParamsSelected={this.setParamsSelected}\r\n                                        chosenParameters={this.state.chosenParameters}\r\n                                        changeChosenParams={this.changeChosenParams}\r\n                                        isWorkspaceChosen={this.state.isWorkspaceChosen}\r\n                                        leaveButtonPressed={this.leaveButtonPressed}/>\r\n        } else if (this.state.window === 'map') {\r\n            return <MapWindow workspaceNumber={this.state.workspaceNumber} \r\n                                changeWorkspace={this.changeWorkspace}\r\n                                areParamsSelected={this.state.areParamsSelected}\r\n                                isWorkspaceChosen={this.state.isWorkspaceChosen}/>\r\n        } else if (this.state.window === 'settings') {\r\n            return <Settings checkExit={this.props.checkExit} timerOn={this.state.timerOn}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {/* <Header transparent style={styles.header}>\r\n                    <Title style={styles.title}>APP NAME</Title>\r\n                </Header> */}\r\n\r\n                <MainHeader login={this.props.login} workspaceNumber={this.state.workspaceNumber}\r\n                            timerOn={this.state.timerOn} timerTime={this.formatTime(this.state.timerTime)}/>\r\n\r\n                {this.setMainWindow()}\r\n\r\n                <FooterMenu changeWindow={this.changeWindow} \r\n                            currentState={this.state.window}\r\n                            isWorkspaceChosen={this.state.isWorkspaceChosen} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        backgroundColor: 'white',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    title: {\r\n        color: 'rgba(35, 71, 152, 1.0)',\r\n        justifyContent: 'flex-end',\r\n        fontFamily: 'roboto-light'\r\n    }\r\n})\r\n","import React, { Component } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Text, Button, Container } from 'native-base'\r\nimport timerStyles from './TimerStyles'\r\n\r\nexport default class SeatTimer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const { timerTime } = this.props\r\n        return(\r\n            <Container style={timerStyles.mainView}> \r\n                <View style={[ {flex: 1}, timerStyles.block ]}>\r\n                    <Button full disabled style={timerStyles.yourTimeButton}>\r\n                            \r\n                        <Text style={timerStyles.edgeBlockText}>Your time</Text>\r\n                    </Button>\r\n                </View>\r\n\r\n                <View style={[ {flex: 5}, timerStyles.block ]}>\r\n                    <View style={timerStyles.centerBlock}>\r\n                        <Text style={timerStyles.stopWatch}>\r\n                            { this.props.formatTime(timerTime) }\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={[ {flex: 1}, timerStyles.block ]}>\r\n                    <Button style={timerStyles.leaveButton}\r\n                            onPressIn={() => this.props.leaveButtonPressed()}>\r\n                        <Text style={timerStyles.edgeBlockText}>Leave workspace</Text>\r\n                    </Button>\r\n                </View>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}","import AuthWindow from './SignIn/AuthWindow';\nimport MainApp from './MainApp/MainApp';\nimport React, {Component} from 'react';\n\nimport * as Font from 'expo-font'\n\nexport default class App extends Component {\n    state = {\n        renderView: 0,\n        login: '',\n        fontLoaded: false,\n        token: null\n    };\n\n    async componentDidMount() {\n        await Font.loadAsync({\n          'roboto-light': require('./assets/fonts/Roboto-Light.ttf'),\n          'Roboto_medium': require('./assets/fonts/Roboto-Medium.ttf')\n        });\n\n        this.setState({ fontLoaded: true })\n    }\n\n    checkData = (flag, someLogin, somePassword) => {\n        if (flag) {\n            // fetch('https://8a8cbf63.ngrok.io/api/login', {\n            //     mode: 'no-cors',\n            //     credentials: 'include',\n            //     method: 'POST',\n            //     headers: {\n            //         // Accept: 'application/json',\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({\n            //         username: someLogin,\n            //         password: somePassword,\n            //     }),\n            // })\n            // .then((response) => {\n            //     console.log('response')\n            //     return response\n            // })\n            // .then((responseJson) => {\n            //     console.log('response 2')\n            //     // let data = JSON.parse(responseJson).token\n            //     alert(responseJson.status + \" \" + responseJson.bodyUsed)\n            //     // if (data != null) {\n            //     //     this.setState({ \n            //     //         renderView: 1,\n            //     //         login: someLogin,\n            //     //         token: data\n            //     //     })\n            //     // }\n            // })\n            // .catch((error) => {\n            //     alert('error: ' + error)\n            // });\n\n            this.setState({ \n                renderView: 1,\n                login: someLogin\n            })\n        }\n    }\n\n    checkExit = flag => {\n        if (flag) {\n            this.setState({\n                correctData: false,\n                login: '',\n                renderView: 0\n            })\n        }\n    }\n\n    render() {\n\n        if (this.state.fontLoaded) {\n            if (this.state.renderView === 1) {\n            return <MainApp login={this.state.login} checkExit={this.checkExit}/>\n            } else return <AuthWindow checkData={this.checkData}/>\n        } else return null\n        \n    }\n}\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Medium.ttf\";"],"sourceRoot":""}